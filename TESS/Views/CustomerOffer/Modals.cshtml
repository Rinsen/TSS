@{
    Layout = null;

}
@using TietoCRM.Models;
@using System.Globalization;
@using System.Linq;
@if (Request["modal"] == "text-template")
{
    <!-- #region asd -->
    <form id="text-template-form" class="form-horizontal">
        <div class="form-group">
            <label for="template-number-select" class="col-sm-2 control-label">Offer text template</label>
            <div class="col-sm-10">
                <select id="template-number-select" name="Template_number" class="form-control selectpicker">
                    <option value="current" selected>Current template used on offer</option>
                    @foreach (view_TextTemplate tt in ViewBag.TextTemplates)
                    {
                        <option value="@tt.ID_PK">@tt.Sign - @tt.Short_descr </option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label for="document-type-text" class="col-sm-2 control-label">Document type</label>
            <div class="col-sm-10">
                <input id="document-type-text" name="Document_type" type="text" class="form-control" value="@ViewBag.CustomerOffer.Document_type">
            </div>
        </div>
        <div class="form-group">
            <label for="document-head-text" class="col-sm-2 control-label">Document head</label>
            <div class="col-sm-10">
                <input id="document-head-text" type="text" name="Document_head" class="form-control" value="@ViewBag.CustomerOffer.Document_head">
            </div>
        </div>
        <div class="form-group">
            <label for="page-head-text" class="col-sm-2 control-label">Page head</label>
            <div class="col-sm-10">
                <textarea id="page-head-text" name="Page_head" class="form-control" rows="3">@ViewBag.CustomerOffer.Page_head</textarea>
            </div>
        </div>
        <div class="form-group">
            <label for="module-info-header" class="col-sm-2 control-label">Module and Services header</label>
            <div class="col-sm-10">
                <textarea id="module-info-header" name="Module_header" class="form-control" rows="3">@ViewBag.CustomerOffer.Module_header</textarea>
            </div>
        </div>
        <div class="form-group">
            <label for="document-foot-text" class="col-sm-2 control-label">Document foot</label>
            <div class="col-sm-10">
                <textarea id="document-foot-text" name="Document_foot" class="form-control" rows="3">@ViewBag.CustomerOffer.Document_foot</textarea>
            </div>
        </div>
        <!--<div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button class="btn btn-success">Update</button>
            </div>
        </div>-->
    </form>
    <script>
        var serverPrefix = "@Url.Content("~/")";
        var currentOfferValues = @Html.Raw(ViewBag.CustomerOfferJSON);
        // Itterate through form inputs and json data and match input with correct values.
        var updateModalFields = function (data, targetFormId) {
            var tinyMCEFields = [
                "Page_head",
                "Document_foot"
            ]
            var $ttForm = $("#" + targetFormId);
            var $inputs = $ttForm.find(":input");
            var dataLen = Object.keys(data).length;
            for (var i = 0; i < dataLen; i++) {
                $inputs.each(function () {
                    var $formInput = $(this);
                    // Match input name with json property name, if a match set form value to prop value;
                    if ($formInput.attr("name") == Object.keys(data)[i]) {
                        if($.inArray($formInput.attr("name"), tinyMCEFields) >= 0)
                        {
                            tinymce.get($formInput.attr('id')).setContent(data[$formInput.attr("name")]);
                        }
                        else
                            $formInput.val(data[$formInput.attr("name")]);
                    }
                });
            }
        }

        // Get field data and update modal fields.
        $("#template-number-select").change(function () {
            var $el = $(this);
            var templateId = $el.val();
            if(templateId == "current"){
                updateModalFields(currentOfferValues, "text-template-form");
            }
            else{
                $.ajax({
                    "url": serverPrefix + "CustomerOffer/JsonData/",
                    "type": "POST",
                    "data": {
                        "requestData": "view_TextTemplate",
                        "templateId": templateId,
                    },
                    "success": function (data) {
                        if (data.length > 0) {
                            var textTemplate = JSON.parse(data);
                            updateModalFields(textTemplate, "text-template-form");
                            $el.val(templateId);
                        }
                    }
                })
            }
        })
        var saveFunction = function(offerNumber){
            var updateData = {};
            var $ttForm = $("#text-template-form");
            var $inputs = $ttForm.find(":input");
            console.log("Spara");
            var tinyMCEInputs = [
                "Page_head",
                "Module_header",
                "Page_foot",
                "Document_foot",
            ];
            $inputs.each(function () {
                var $formInput = $(this);
                var inputProp = $formInput.attr("name");
                if(inputProp != "Sign" && inputProp != "Template_number" && inputProp != "SSMA_timestamp" && typeof inputProp != 'undefined'){
                    //console.log($formInput.attr("value"),$formInput.val());
                    // if input is a TinyMCE field extract the content.
                    if($.inArray(inputProp, tinyMCEInputs) >= 0){

                        updateData[inputProp] = tinymce.get($formInput.attr("id")).getContent()
                    }
                    else{
                        updateData[inputProp] = $formInput.val();
                    }

                }

            });

            updateData["primaryKey"] = offerNumber;
            var updateDataArr = [];
            updateDataArr.push(updateData);


            $.ajax({
                "url": serverPrefix + "CustomerOffer/JsonData/",
                "type": "POST",
                "data": {
                    "requestData": "update_view_CustomerOffer",
                    "object": JSON.stringify(updateDataArr)
                },
                dataType: 'text',
                // iOS 6 has a dreadful bug where POST requests are not sent to the
                // server if they are in the cache.
                headers: { 'Cache-Control': 'no-cache' }, // Apple!
                "success": function (data) {
                    if (data > 0) {
                        // Update current values
                        currentOfferValues = updateData;
                        // Loop through "HTML PDF" and update fields
                        $.each(updateData, function (key, val) {
                            var $updateTarget = $('#' + key);
                            if($updateTarget.length > 0){
                                $updateTarget.html(val);
                            }
                        })
                    }
                }
            })
        }
        $('.selectpicker').selectpicker();
    </script>
    <script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
    @*<script type="text/javascript" src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>*@
    <script type="text/javascript">
        $('.bootbox').bind('hidden.bs.modal', function () {
            tinyMCE.remove();
        });
        tinymce.init({
            selector: "#page-head-text",
            plugins: tinyDefaultPlugins,
            toolbar: tinyDefaultToolbars,
            browser_spellcheck: true,
            branding: false
        });
        tinymce.init({
            selector: "#module-info-header",
            plugins: tinyDefaultPlugins,
            toolbar: tinyDefaultToolbars,
            browser_spellcheck: true,
            branding: false
        });
        tinymce.init({
            selector: "#page-foot-text",
            plugins: tinyDefaultPlugins,
            toolbar: tinyDefaultToolbars,
            browser_spellcheck: true,
            branding: false
        });
        tinymce.init({
            selector: "#document-foot-text",
            plugins: tinyDefaultPlugins,
            toolbar: tinyDefaultToolbars,
            browser_spellcheck: true,
            branding: false
        });
    </script>
    <!-- #endregion -->
}

else if (Request["modal"] == "articles")
{

    <form class="form-inline">
        <div class="col-sm-4">
            <label for="System-select">System: </label>
            <select style="float:none" class="form-control selectpicker" data-width="80%" id="System-select" data-live-search="true">
                @foreach (var selectOption in ViewBag.Systems)
                {
                    <option value="@selectOption.Value">@selectOption.Text</option>
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="classification-select">Classification: </label>
            <select style="float:none" class="form-control selectpicker" data-width="70%" id="classification-select"></select>
        </div>
        <div class="col-sm-4">
            <label for="art-search">Or:</label>
            <input class="form-control" type="text" id="art-search">
            <button id="search-button" type="button" class="btn btn-primary">Search</button>
        </div>
    </form>
    <form id="articles-form">
        <table id="articles-table">
            <tr>
                <td valign="top">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">Available articles</h3>
                        </div>
                        <div class="panel-body" style="font-size: 9pt;">
                            <table style="margin-left: 0.8em;">
                                <tr>
                                    <th></th>
                                    <th title="Exists in previous contract">#</th>
                                    <th title="Dependencies">#</th>
                                    <th>Art. nr</th>
                                    <th>Module</th>
                                    <th>License</th>
                                    <th>Maintenance</th>
                                </tr>

                            </table>
                            <div id="available-articles" class="list-group">
                            </div>
                            <h5 style="margin-top: 2em;">Blue rows marked with <span class='glyphicon glyphicon-ok'></span> exists in previous contracts</h5>
                            <h5 style="margin-top: 2em;">Rows marked with <span class='glyphicon glyphicon-star'></span> are finalized or re-signed modules</h5>
                        </div>
                    </div>
                    <p>Click on an item above to add it to the list</p>
                </td>
                <td valign="top">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">Selected articles to add</h3>
                        </div>
                        <div class="panel-body" style="font-size: 9pt;">
                            <table style="margin-left: 0.8em;">
                                <tr>
                                    <th>Art. nr</th>
                                    <th>Module</th>
                                    <th>License</th>
                                    <th>Maintenance</th>
                                </tr>

                            </table>
                            <div id="selected-articles" class="list-group">
                                @{

                                    decimal LicenseTotal = 0;
                                    decimal MaintenanceTotal = 0;
                                    CultureInfo se = CultureInfo.CreateSpecificCulture("sv-SE");
                                    decimal discountMP = 0;
                                    decimal discountLP = 0;
                                }
                                @foreach (dynamic or in ViewBag.Articles)
                                {
                                    if (or.Discount == 1 && or.Discount_type == 1)
                                    {
                                        discountMP += or.License ?? 0;
                                        discountLP += or.Maintenance ?? 0;
                                    }
                                    String License;
                                    String Maintenance;
                                    // Format currency
                                    if (or.Discount != 1 || or.Discount_type == 0)
                                    {
                                        License = string.Format(se, "{0:C2}", or.License).Replace(".", " ");
                                        Maintenance = string.Format(se, "{0:C2}", or.Maintenance).Replace(".", " ");
                                        LicenseTotal += Convert.ToDecimal(or.License);
                                        MaintenanceTotal += Convert.ToDecimal(or.Maintenance);
                                    }
                                    else
                                    {
                                        String l = ((int)or.License).ToString();
                                        String m = ((int)or.Maintenance).ToString();
                                        License = l + "%";
                                        Maintenance = m + "%";
                                    }

                                    <button onclick="moveItem(event, this)"
                                            type="button"
                                            class="list-group-item art-nr-@or.Article_number"
                                            data-selected="true"
                                            data-discount="@or.Discount"
                                            data-discount-type="@or.Discount_type"
                                            data-module-text-id="@or.ModuleTextId"
                                            data-offer-description="@or.OfferDescription"
                                            data-offer-id="@or.Offer_number"
                                            @if (or.System != "Lärportal") { @Html.Raw("data-license=" + or.License.ToString().Replace(",", ".")) ; }
                                            data-maintenance="@or.Maintenance.ToString().Replace(",", ".")"
                                            data-alias="@or.Module"
                                            data-automapping="@or.IncludeDependencies"
                                            data-status="@or.Module_status">
                                        <table>
                                            <tr>
                                                <td class="art-nr">@or.Article_number</td>
                                                <td>@or.Module</td>


                                                @if (or.System != "Lärportal")
                                                {
                                                    <td>@License</td>
                                                    <td>@Maintenance</td>
                                                }
                                                else
                                                {
                                                    <td style='float:right; width:auto;'>@Maintenance</td>
                                                }

                                            </tr>
                                        </table>
                                    </button>
                                }
                                @{
                                    // Format currency
                                    if (discountMP < -100)
                                    {
                                        discountMP = -100;
                                    }
                                    if (discountLP < -100)
                                    {
                                        discountLP = -100;
                                    }

                                    String LicenseTotalStr = string.Format(se, "{0:C2}", LicenseTotal + LicenseTotal * (decimal)discountMP / 100).Replace(".", " ");
                                    String MaintenanceTotalStr = string.Format(se, "{0:C2}", MaintenanceTotal + MaintenanceTotal * (decimal)discountLP / 100).Replace(".", " ");
                                }

                            </div>
                            <table>
                                <tr>
                                    <td></td>
                                    <td style="text-align: right"><h4 style="margin-right: 2em;">Summa:</h4></td>
                                    <td><h4 id="article-license-total">@LicenseTotalStr</h4></td>
                                    <td><h4 id="article-maintenance-total">@MaintenanceTotalStr</h4></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <p>Click on an item above to remove it from the list</p>
                </td>
            </tr>
        </table>
    </form>



    <script>
    var serverPrefix = "@Url.Content("~/")";

    // Selectpickers
    $('.selectpicker').selectpicker();

    // Global variables
    var $SystemSelect = $("#System-select");
    var $classificationSelect = $("#classification-select");

    $(document).ready(function(){
        $('#art-search').keypress(function(e){
            if(e.keyCode==13){
                $('#search-button').click();
                return false;
            }
        });
    });

    // Function to fill the classifications select element with options corresponding to the correct
    // System.
    var fillClassificationSelect = function(System){
        var $classificationSelect = $("#classification-select");
        $.ajax({
            "url": serverPrefix + "CustomerOffer/JsonData/",
            "type": "POST",
            "data": {
                "requestData": "update_classification_select",
                "System": System,
                "customer": "@Html.Raw(ViewBag.CustomerName)",
                "Area": "@Html.Raw(ViewBag.CustomerOffer.Area)"
            },
            "success": function (data) {
                if (data.length > 0) {
                    var selectOptions = JSON.parse(data);
                    $classificationSelect.empty();
                    $.each(selectOptions, function(i, selectOption){
                        var $optionEl = $("<option></option>").val(selectOption.Value).html(selectOption.Text);
                        $classificationSelect.append($optionEl);
                        if(i == selectOptions.length-1)
                            fillArticleList($SystemSelect.val(), $classificationSelect.val());
                    });
                }
                $classificationSelect.selectpicker('refresh');
            }
        });
        $classificationSelect.selectpicker('refresh');
    }
    // Fill classifications select on page load
    @{
        String system = "No systems exist.";
        if (ViewBag.Systems.Count > 0)
        {
            system = ViewBag.Systems[0].Value;
        }
    }
    fillClassificationSelect("@Html.Raw(system)")

    // Function to fill the article list depending on chosen System and classification
    var fillArticleList = function(System, classification){
        $.ajax({
            "url": serverPrefix + "CustomerOffer/JsonData/",
            "type": "POST",
            "data": {
                "requestData": "get_modules",
                "System": System,
                "classification": classification,
                "customer": "@Html.Raw(ViewBag.CustomerName)",
                "offerNo": "@Html.Raw(ViewBag.OfferNo)",
            },
            "success": function (data) {
                if (data.length > 0) {
                    var articles = JSON.parse(data);
                    var $availableList = $("#available-articles");
                    var $selectedList = $("#selected-articles");
                    $availableList.empty();
                    handleExistingArticle(articles, $availableList, $selectedList);
                }
            }
        });
    }
    var fillArticleListSearch = function(){
        var $searchText = $("#art-search");
        $.ajax({
            "url": serverPrefix + "CustomerOffer/JsonData/",
            "type": "POST",
            "data": {
                "requestData": "get_modules_all",
                "customer": "@Html.Raw(ViewBag.CustomerName)",
                "searchtext": $searchText.val(),
                "offerNo": "@Html.Raw(ViewBag.OfferNo)",
                "moduletype": 1, //Articles
            },
            "success": function (data) {
                if (data.length > 0) {
                    var articles = JSON.parse(data);
                    var $availableList = $("#available-articles");
                    var $selectedList = $("#selected-articles");
                    $availableList.empty();
                    handleExistingArticle(articles, $availableList, $selectedList);
                }
            }
        });
    }
    function RecursiveUnbind($jElement) {
        // remove this element's and all of its children's click events
        $jElement.unbind();
        $jElement.removeAttr('onclick');
        $jElement.children().each(function () {
            RecursiveUnbind($(this));
        });
    }
    var editArticle = function(editButton){
        var $editButton = $(editButton);
        var $articleBtn = $editButton.parent().parent().parent().find("td button");
        var oldLicenseVal, oldMaintenanceVal;
        if($articleBtn.data("discount") != '1' || $articleBtn.data("discount-type") == '0'){
            oldLicenseVal = parseFloat($articleBtn.data("license")).toFixed(2);
            oldMaintenanceVal = parseFloat($articleBtn.data("maintenance")).toFixed(2);
        }
        else{
            oldLicenseVal = parseInt($articleBtn.data("license"));
            oldMaintenanceVal = parseInt($articleBtn.data("maintenance"));
        }
        var oldAlias = $articleBtn.data("alias");
        var articleName = $articleBtn.find(".art-nr").next().html();
        var articleNr = $articleBtn.find(".art-nr").html();
        var licenseText = "";
        if(typeof $articleBtn.data("license") != "undefined" && typeof $articleBtn.data("license") != false){
            licenseText = " <div class='form-group'>                                                                                                    \
                                <label for='license-text' class='col-sm-2 control-label'>License</label>                                                \
                                <div class='col-sm-10'>                                                                   \
                                    <input class='form-control' id='license-text' name='License' value='" + oldLicenseVal + "'>                         \
                                    <input class='form-control' id='license-percent-text' name='License_percent' value='0'> %                          \
                                    <button type='button' class='btn btn-default' id='license-percent-button'>&minus;</button>                  \
                                </div>                                                                                                                 \
                            </div>  ";
        }
        var aliasText = " <div class='form-group'>                                                                                                      \
                                <label for='license-text' class='col-sm-2 control-label'>Alias</label>                                                  \
                                <div class='col-sm-10'>                                                                                                 \
                                    <input class='form-control' id='alias-text' name='Alias' value='" + oldAlias + "'>                                  \
                                </div>                                                                                                                  \
                            </div>  ";
        bootbox.dialog({
            backdrop: false,
            closebutton: false,
            className: "small-modal",
            title: "Edit Article:  " + articleNr + " " + articleName,
            message: "<form class='form-horizontal'>                                                                                                \                                                                                                                    \
                        <div class='form-group'>                                                                                                    \
                            <label for='maintenance-text' class='col-sm-2 control-label'>Maintenance</label>                                        \
                            <div class='col-sm-10'>                                                                   \
                                <input class='form-control' id='maintenance-text' name='Maintenance' value='" + oldMaintenanceVal + "'>             \
                                <input class='form-control' id='maintenance-percent-text' name='Maintenance_percent' value='0'> %                  \
                                <button type='button' class='btn btn-default' id='maintenance-percent-button'>&minus;</button>                  \
                            </div>                                                                                                                  \
                        </div>                                                                                                                       \
                        " + licenseText  + "                                                                                                        \
                     " + aliasText + " </form>"
                ,
                buttons: {
                    close: {
                        label: "Close",
                        className: "btn-default",
                        callback: function(){
                            $(".small-modal").remove();
                        }
                    },
                    success: {
                        label: "Save",
                        className: "btn-primary",
                        callback: function () {
                            var $licenseEl = $("#license-text");
                            var $maintenanceEl = $("#maintenance-text");
                            if ($licenseEl.val() == "") { $licenseEl.val("0") };
                            if ($maintenanceEl.val() == "") {$maintenanceEl.val("0")};
                            var $aliasEl = $("#alias-text");
                            // Update article data attrs
                            if(typeof $licenseEl != "undefined" && typeof $licenseEl != false){
                                $articleBtn.attr("data-license", $licenseEl.val());
                                $articleBtn.data("license", $licenseEl.val());
                                if ($articleBtn.data("discount") != '1' || $articleBtn.data("discount-type") == '0')
                                    $articleBtn.find(".license").html(formatCurrencyNoKr($licenseEl.val()));
                                else
                                    $articleBtn.find(".license").html($licenseEl.val());
                            }
                            $articleBtn.attr("data-maintenance", $maintenanceEl.val());
                            $articleBtn.data("maintenance", $maintenanceEl.val());
                            if ($articleBtn.data("discount") != '1' || $articleBtn.data("discount-type") == '0')
                                $articleBtn.find(".maintenance").html(formatCurrencyNoKr($maintenanceEl.val()));
                            else
                                $articleBtn.find(".maintenance").html($maintenanceEl.val());

                            $articleBtn.attr("data-alias", $aliasEl.val());
                            $articleBtn.data("alias", $aliasEl.val());
                            $articleBtn.find(".alias").html($aliasEl.val());


                            $(".small-modal").remove();

                        },
                    },
                }
        });
        $("#maintenance-percent-button").click(function () {
            var $maintenanceEl = $("#maintenance-text");
            $maintenanceEl.val(calculateDiscount($("#maintenance-percent-text").val(), $maintenanceEl.val()));
        });

        $("#license-percent-button").click(function () {
            var $licenseEl = $("#license-text");
            $licenseEl.val(calculateDiscount($("#license-percent-text").val(), $licenseEl.val()));
        });
    }

    // Function to disable a button element if it already exists in the selected list.
    var handleExistingArticle = function(availableArticles, $availableList, $selectedList){
        var aaLen = availableArticles.length;
        var $artNrs = $selectedList.find("button .art-nr");
        var artNrsLen = $artNrs.length;
        var hasFixedRows = false;

        for (var i = 0; i < aaLen; i++) {

            var article = availableArticles[i];
            var usedCell = "<td></td>";
            var depCell = "<td></td>";
            var artComm = ((article.Comment == '') ? "Hjälptext saknas" : article.Comment);
            var artClass = article.System + " / " + article.Classification;
            var buttonStyle = "";

            console.log(artClass);

            if (article.Expired == true) {
                usedCell = "<td><span class='glyphicon glyphicon-star'></span></td>";
            }
            else if (article.Used == true) {
                usedCell = "<td><span class='glyphicon glyphicon-ok'></span></td>";
                buttonStyle = "style='background-color:#afd1e6'";
            }

            var depList = "";
            if (article.HasDependencies || (article.Description != null && article.Description.length > 0) || article.Module_status != "0") {
                var depTitle = "";

                if (article.Module_status_txt.length > 0 && article.Module_status != "0") {
                    depTitle = "Restriction:\n";
                    depTitle += article.Module_status_txt;
                    depTitle += "\n";
                }

                if (article.HasDependencies) {
                    if (depTitle.length > 0) {
                        depTitle += "\n\n";
                    }

                    var depLen = article.Dependencies.length;
                    depTitle += "Depends on:\n";

                    var depArticle;
                    for (var d = 0; d < depLen; d++) {
                        depArticle = article.Dependencies[d];
                        depTitle += " " + depArticle.Article_number + ": " + depArticle.Module + "\n";

                        //Save dependency list for easier removal
                        depList += depArticle.Article_number + "|";
                    }
                }

                if (article.Description.length > 0) {
                    if  (depTitle.length > 0) {
                        depTitle += "\n";
                    }
                    depTitle += "Important info:\n";
                    depTitle += article.Description;
                }

                depCell = "<td title='" + depTitle + "'><span class='glyphicon glyphicon-exclamation-sign'></span></td>";
            }
            var $newButton;
            if(article.System == "Lärportal"){
                if(!hasFixedRows)
                {
                    $tr = $availableList.parent().find("table").find("tbody").find("tr");
                    $tr.html("<th></th><th></th><th>Art. nr</th><th>Module</th><th>Price category</th>");
                    hasFixedRows = true;
                }
                $newButton = $("<button onclick='moveItem(event, this)'                                             \
                                            class='list-group-item art-nr-" + article.Article_number + "'           \
                                            data-selected='false'                                                   \
                                            data-discount-type='" + article.Discount_type + "'                      \
                                            data-discount='" + article.Discount + "'                                \
                                            data-maintenance='" + article.Price_category + "'                       \
                                            data-status='" + article.Module_status + "'                             \
                                            data-status-text='" + article.Module_status_txt + "'                    \
                                            data-alias='" + article.Module + "'                                     \
                                            data-multiple-select='" + article.Multiple_type + "'                    \
                                            data-read-name-from-module='" + article.Read_name_from_module + "'      \
                                            data-offer-description='" + article.Offer_Description + "'              \
                                            data-module-text-id='" + article.Module_text_id + "'                    \
                                            data-offer-id='" + article.Offer_id + "'                                \
                                            data-automapping='" + article.IncludeDependencies + "'                  \
                                            data-deplist='" + depList + "'                                          \
                                            " + buttonStyle + "                                                     \
                                            type='button'>                                                          \
                                    <table>                                                                         \
                                        <tr>                                                                        "
                                            + usedCell + depCell +
                                           "<td class='art-nr' title='" + artClass + "'>" + article.Article_number + "</td>                  \
                                            <td class='alias' title='" + artComm + "'>" + article.Module + "</td>                                         \
                                            <td class='maintenance' style='float: right; width:auto;'>" + formatCurrencyNoKr(article.Price_category) + "</td>\
                                        </tr>                                                                       \
                                    </table>                                                                        \
                                </button>");
            }
            else{
                if(!hasFixedRows)
                {
                    $tr = $availableList.parent().find("table").find("tbody").find("tr");
                    $tr.html("<th></th><th></th><th>Art. nr</th><th>Module</th><th>License</th><th>Maintenance</th>");
                    hasFixedRows = true;
                }
                var button = "";
                button += "<button onclick='moveItem(event, this)'                                             \
                                            class='list-group-item art-nr-" + article.Article_number + "'           \
                                            data-selected='false'                                                   \
                                            data-discount-type='" + article.Discount_type + "'                      \
                                            data-discount='" + article.Discount + "'                                \
                                            data-license='" + article.License + "'                                  \
                                            data-maintenance='" + article.Maintenance + "'                          \
                                            data-status='" + article.Module_status + "'                             \
                                            data-status-text='" + article.Module_status_txt + "'                    \
                                            data-alias='" + article.Module + "'                                     \
                                            data-multiple-select='" + article.Multiple_type + "'                    \
                                            data-read-name-from-module='" + article.Read_name_from_module + "'      \
                                            data-offer-description='" + article.Offer_Description + "'              \
                                            data-module-text-id='" + article.Module_text_id + "'                    \
                                            data-offer-id='" + article.Offer_id + "'                                \
                                            data-automapping='" + article.IncludeDependencies + "'                  \
                                            data-deplist='" + depList + "'                                          \
                                            " + buttonStyle + "                                                     \
                                            type='button'>                                                          \
                                    <table>                                                                         \
                                        <tr>                                                                        "
                                            + usedCell + depCell +
                                           "<td class='art-nr' title='" + artClass + "'>" + article.Article_number + "</td>                  \
                                            <td class='alias' title = '" + artComm + "'>" + article.Module + "</td>                                         \
                                            ";
                if(article.Discount_type != '1'){
                    button += "<td class='license'>" + formatCurrencyNoKr(article.License) + "</td>        \
                            <td class='maintenance'>" + formatCurrencyNoKr(article.Maintenance) + "</td>";
                }
                else{
                    button += "<td class='license'>" + article.License + "%</td>        \
                            <td class='maintenance'>" + article.Maintenance + "%</td>";
                }

                button +=                 "</tr>                                                                       \
                                    </table>                                                                        \
                                </button>";
                $newButton = $(button);
            }
            var $buttonContainer = $("<table>                                                                                               \
                                        <tr>                                                                                                \
                                            <td style='width: 10px'>                                                                        \
                                                <div style='margin-right: 1em; cursor: pointer'>                                            \
                                                    <span onclick='editArticle(this)' class='glyphicon glyphicon-pencil'></span>            \
                                                </div>                                                                                      \
                                            </td>                                                                                           \
                                            <td style='width: auto' class='module-item-container'>                                          \                                                                                         \
                                            </td>                                                                                           \
                                        </tr>                                                                                               \
                                     </table>");
            var $mic = $buttonContainer.find(".module-item-container");
            if(artNrsLen > 0) {
                for(var j = 0; j < artNrsLen; j++){
                    var selVal = $artNrs.get(j);
                    var $selectedButton = $(selVal).parent().parent().parent();
                    var selectedButtonArt = $(selVal).html();

                    if(article.Article_number == selectedButtonArt && article.Multiple_type != "1")
                    {
                        $newButton.attr("style", "");
                        $mic.append($newButton.prop("disabled", true));

                        $availableList.append($buttonContainer);
                    } else {
                        $mic.append($newButton);

                        $availableList.append($buttonContainer);
                    }
                }
            } else {
                $mic.append($newButton);

                $availableList.append($buttonContainer);
            }
        }

    }

    // Change content of classificationSelect on change
    $SystemSelect.change(function () {
        var $el = $(this);
        var System = $el.val();
        fillClassificationSelect(System);

    });

    // Change content of available-articles on change
    $classificationSelect.change(function () {
        var $el = $(this);
        var classification = $el.val();
        var System = $SystemSelect.val();
        fillArticleList(System, classification);
    });

    $("#search-button").click(function () {
        console.log("Click");
        fillArticleListSearch();
    });

     //
    var calculateSums = function(){
        var $selectedArticleButtons = $("#selected-articles button");
        var SACLen =  $selectedArticleButtons.length;
        var LicenseTotal = 0,
            MaintenanceTotal = 0;
        var discountArr = new Array();
        for(var i = 0; i < SACLen; i++){
            var $btn = $($selectedArticleButtons[i]);
            var license = (typeof $btn.data("license") != 'undefined' ? $btn.data("license") : 0);
            var maintenance = (typeof $btn.data("maintenance") != 'undefined' ? $btn.data("maintenance") : 0);
            if($btn.data("discount") == '1'){
                var type = $btn.data("discount-type");
                var discountObj = { "License": license, "Maintenance": maintenance, "Discount_type": type };
                discountArr.push(discountObj);
            }
            else{
                LicenseTotal += parseFloat(license);
                MaintenanceTotal += parseFloat(maintenance);
            }
        }
        var daLenght = discountArr.length;
        var discountL = {"Percentage": 0, "Money": 0};
        var discountM = { "Percentage": 0, "Money": 0 };
        for (var i = 0; i < daLenght; i++) {
            if (discountArr[i].Discount_type == "1") {
                discountL.Percentage += parseInt(discountArr[i].License);
                discountM.Percentage += parseInt(discountArr[i].Maintenance);
            }
            else {
                discountL.Money += parseFloat(discountArr[i].License);
                discountM.Money += parseFloat(discountArr[i].Maintenance);
            }
        }
        if (discountL.Percentage < -100)
            discountL.Percentage = -100;
        if (discountM.Percentage < -100)
            discountM.Percentage = -100;

        LicenseTotal += discountL.Money;
        MaintenanceTotal += discountM.Money;

        LicenseTotal += LicenseTotal * discountL.Percentage / 100;
        MaintenanceTotal += MaintenanceTotal * discountM.Percentage / 100;
        $("#article-license-total").html(formatCurrencyNoKr(LicenseTotal));
        $("#article-maintenance-total").html(formatCurrencyNoKr(MaintenanceTotal));
    }

    // Array to store objects of selected articles
    var selectedArticlesArray = [];

    var removeArticle = function(arr, articleNr) {
        for (var i = arr.length; i--;) {
            if (arr[i].Article_number == articleNr) {
                arr.splice(i, 1);
            }
        }
    }

    // Move list item from either available-articles to selected-articles or
    // the other way around.
    var moveItem = function(event, element){
        $button = $(element);

        $availableArticles = $("#available-articles");
        $selectedArticles = $("#selected-articles");

        var buttonArt = $button.find(".art-nr").html();
        var buttonOfferId = $button.data("offer-id");
        var buttonLicense = $button.data("license");
        var buttonHasAutoMapping = $button.data("automapping");
        var buttonMaintenance = $button.data("maintenance");
        var buttonStatus = $button.data("status");
        var buttonStatusTxt = $button.data("status-text");

        if ($button.attr("data-selected") == "false") {

            if (buttonStatus > 0) {
                //Show dialog
                if (!confirm("Article with restriction! Continue?\n\nRestriction:\n" + buttonStatusTxt)) {
                    return;
                }
            }

            $newButton = $button.clone();

            // Fix to exclude the "used" checkmark on selected items.
            $($newButton).find("td").get(0).remove();

            // Fix to exclude the "dep" cell on selected items.
            $($newButton).find("td").get(0).remove();

            // Clear eventual background color of selected row (left side will be green (disabled=true via css...) and right side will be white)
            $button.attr("style", "");
            $newButton.attr("style", "");

            if($button.attr("data-multiple-select") != "1"){
                $button.prop("disabled", true);
            }
            $newButton.attr("data-selected", "true");
            $newButton.attr("type", "button");
            if($button.data("discount") != '1' || $button.data("discount-type") == '0'){
                $newButton.find('.license').html(formatCurrencyNoKr(buttonLicense));
                $newButton.find('.maintenance').html(formatCurrencyNoKr(buttonMaintenance));
            }
            else{
                $newButton.find('.license').html(buttonLicense + "%");
                $newButton.find('.maintenance').html(buttonMaintenance + "%");
            }

            if (buttonHasAutoMapping && confirm('Add dependencies automatically to the offer?')) {
                var depListArray = $button.data("deplist").split('|');
                console.log(depListArray);
                for (i = 0; i < depListArray.length; i++) {
                    //First check if article already is selected
                    var modToAddExists = $selectedArticles.find(".art-nr-" + depListArray[i]);
                    if (modToAddExists.length == 0) {

                        var modToAdd = $availableArticles.find(".art-nr-" + depListArray[i]);
                        if (modToAdd.length > 0) { //Is dependency module in array of available articles?

                            var depModToAdd = modToAdd.clone();

                            // Fix to exclude the "used" checkmark on selected items.
                            depModToAdd.find("td").get(0).remove();

                            // Fix to exclude the "dep" cell on selected items.
                            depModToAdd.find("td").get(0).remove();

                            // Clear eventual background color of selected row (left side will be green (disabled=true via css...) and right side will be white)
                            modToAdd.attr("style", "");
                            depModToAdd.attr("style", "");

                            if (modToAdd.attr("data-multiple-select") != "1") {
                                modToAdd.prop("disabled", true);
                            }

                            depModToAdd.attr("data-selected", "true");
                            depModToAdd.attr("type", "button");

                            //Fix colors
                            depModToAdd.appendTo($selectedArticles);
                        } else { //No? Get them and create new buttons for them...
                            if (depListArray[i] != "") {
                                this.getModuleByArticleNumber(depListArray[i], "@Html.Raw(ViewBag.CustomerName)", buttonOfferId);
                            }
                        }
                    }
                }

                // Save it!
                $newButton.attr("data-automapping", "true");
            } else {
                $newButton.attr("data-automapping", "false");
            }

            $newButton.appendTo($selectedArticles);
            calculateSums();
        } else {
            $availableArticles.find(".art-nr-" + buttonArt).prop("disabled", false);

            var test = $availableArticles.find(".art-nr-" + buttonArt).find("span");
            if (test.length > 0 && test[0].className == "glyphicon glyphicon-ok") {
                //Put back backgroundColor lightblue...
                $availableArticles.find(".art-nr-" + buttonArt).attr("style", "background-color:#afd1e6");
            }
            //console.log(".art-nr-" + buttonArt);

            $button.attr("data-selected", "false");
            $button.remove();

            //Also we might need to remove connected articles...
            if (buttonHasAutoMapping && confirm("Remove all article dependencies?")) {
                if ($button.data("deplist") != "") {
                    var depListArray = $button.data("deplist").split('|');
                    for (i = 0; i < depListArray.length; i++) {
                        //console.log(test[i]);

                        var modToRem = $selectedArticles.find(".art-nr-" + depListArray[i]);
                        if (modToRem.length > 0) {
                            $availableArticles.find(".art-nr-" + depListArray[i]).prop("disabled", false);

                            var test2 = $availableArticles.find(".art-nr-" + depListArray[i]).find("span");
                            if (test2.length > 0 && test2[0].className == "glyphicon glyphicon-ok") {
                                //Put back backgroundColor lightblue...
                                $availableArticles.find(".art-nr-" + depListArray[i]).attr("style", "background-color:#afd1e6");
                            }
                            //console.log("Mod to remove:" + ".art-nr-" + depListArray[i]);
                            //console.log(modToRem);
                            modToRem.attr("data-selected", "false");
                            modToRem.remove();
                        }
                    }
                }
            }

            calculateSums();
        }
    }

    // Function to show a highlight effect on movement between lists
    var highlightItem = function ($item, css) {
        $item.addClass(css)
        setTimeout(function () {
            $item.removeClass(css);
            $item.addClass("highlight-item-fade");
            setTimeout(function () {
                $item.removeClass("highlight-item-fade");
            }, 600);
        }, 600);
    }

    var getModuleByArticleNumber = function (article_number, customer, offer_id) {
        // Fetch module for article dependency connection
        $.ajax({
            "url": serverPrefix + "CustomerOffer/GetModuleByArticleNumber?article_number=" + article_number + "&customer=" + customer + "&offer_id=" + offer_id,
            "type": "GET",
            "success": function (data) {
                if (data != null && data != "") {
                    var module = JSON.parse(data);
                    $selectedArticles = $("#selected-articles");
                    var html = "";
                    html += "                                                                   \
                    <button onclick='moveItem(event, this)'                                     \
                            type='button'                                                       \
                            class='list-group-item art-nr-" + module.Article_number + "'        \
                            data-selected='true'                                                \
                            data-alias='" + module.Module + "'                                  \
                            data-license='" + module.License + "'                               \
                            data-maintenance='" + module.Maintenance + "'                       \
                            data-status='" + module.Module_status + "'                          \
                            data-discount='" + module.Discount + "'                             \
                            data-discount-type='" + module.Discount_type + "'                   \
                            data-offer-description='" + module.Offer_description + "'           \
                            data-module-text-id='" + module.Module_text_id + "'                 \
                            data-offer-id='" + offer_id + "'                                    \
                            data-automapping='false'                                            \
                            data-deplist=''                                                     \
                            data-rowtype='3'>                                                   \
                        <table>                                                                 \
                            <tr>                                                                \
                                <td class='art-nr'>" + module.Article_number + "</td>";
                    html += "<td class='alias'>" + module.Module + "</td>";

                    if (module.Discount != '1' || module.Discount_type == '0') {
                        html += "<td>" + formatCurrency(module.License) + "</td>                                \
                                <td>" + formatCurrency(module.Maintenance) + "</td>                             \
                            </tr>                                                               \
                        </table>                                                                \
                    </button>                                                                   \
                    ";
                    }
                    else {
                        html += "<td>" + module.License + "%</td>                                \
                                <td>" + module.Maintenance + "%</td>                             \
                            </tr>                                                               \
                        </table>                                                                \
                    </button>                                                                   \
                    ";
                    }
                    $selectedArticles.append(html);
                }
            }
        });
    };

    var saveFunction = function(){
        var selectedArticlesArray = [];
        var $selectedList = $("#selected-articles button");
        var selectedListLen = $selectedList.length;
        for(var i = 0; i < selectedListLen; i++)
        {
            var $button = $($selectedList[i]);
            var buttonArt = $button.find(".art-nr").html();
            var buttonLicense = $button.data("license");
            var buttonMaintenance = $button.data("maintenance");
            var buttonAlias = $button.data("alias");
            var buttonDiscount = $button.data("discount");
            var buttonOfferDescription = $button.data("offer-description");
            var buttonModuleTextId = $button.data("module-text-id");
            var buttonOfferId = $button.data("offer-id");
            var buttonAutoMapping = $button.data("automapping");
            var buttonDepList = $button.data("deplist");

            // "Create a new article" to store in an array to use for server side db update.
            var newArticle = {
                "Article_number":  buttonArt,
                "Alias": buttonAlias,
                "License": buttonLicense,
                "Maintenance": buttonMaintenance,
                "Discount_type": buttonDiscount,
                "Offer_description": buttonOfferDescription,
                "Module_text_id": buttonModuleTextId,
                "Offer_id": buttonOfferId,
                "Module_type": "A", //Artikel
                "Automapping": buttonAutoMapping,
                "Dep_list": buttonDepList
            }
            selectedArticlesArray.push(newArticle);
        }
        console.log(selectedArticlesArray);

        $.ajax({
            "url": serverPrefix + "CustomerOffer/JsonData/",
            "type": "POST",
            "data": {
                "requestData": "update_module_rows",
                "Object": JSON.stringify(selectedArticlesArray),
                "Offer_number": "@Request["selected-offer"]"
            },
            dataType: 'text',
            // iOS 6 has a dreadful bug where POST requests are not sent to the
            // server if they are in the cache.
            headers: { 'Cache-Control': 'no-cache' }, // Apple!
            "success": function (data) {
                if (data > 0) {
                    //Need to save standard texts to moduleinfo
                    $.ajax({
                        "url": serverPrefix + "CustomerOffer/ModuleTextData/",
                        "type": "POST",
                        "data": {
                            "object": JSON.stringify(selectedArticlesArray)
                        },
                        dataType: 'text',
                        // iOS 6 has a dreadful bug where POST requests are not sent to the
                        // server if they are in the cache.
                        headers: { 'Cache-Control': 'no-cache' }, // Apple!
                        "success": function (data) {
                            //if (data > 0) {
                                // Success to update db. Now update the preview section.
                                $.ajax({
                                    "url": serverPrefix + "CustomerOffer/ViewPdf?selected-offer=@Request["selected-offer"]&offer-section=_OfferHTML_OfferSection",
                                    "type": "GET",
                                    "success": function (data) {
                                        $(".crm-pdf-offer-section").html(data);
                                        location.reload(true);
                                    }
                                });
                            //}
                        }
                    });
                }
                else{
                    console.log(data);
                }
            }
        })
    }

    </script>
}
else if (Request["modal"] == "services")
{
    <form class="form-inline" id="service-form">
        <table width="100%">
            <tr>
                <td style=" width:100%;">
                    <div class="text-right" style="margin-bottom:10px">
                        <label for="service-search">Search services:</label>
                        <input class="form-control" type="text" id="service-search">
                        <button id="service-search-button" type="button" class="btn btn-primary">Search</button>
                    </div>
                </td>
            </tr>
        </table>
        <table width="100%">
            <tr>
                <td style=" width:50%;">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">Available services</h3>
                        </div>
                        <div class="panel-body" style="overflow-y: scroll; height:52vh;">
                            <div id="available-services" class="list-group">
                                @{
                                    view_CustomerOffer offer = ViewBag.CustomerOffer;
                                    CultureInfo se = CultureInfo.CreateSpecificCulture("sv-SE");
                                }
                                @foreach (view_Module service in ViewBag.Services)
                                {
                                    String price = "";
                                    String title = String.IsNullOrEmpty(service.Description) ? "" : "Important info:\n" + service.Description;
                                    int cost = 0;
                                    if (offer._ConsultantRows.Any(c => c.Code == service.Article_number))
                                    {
                                        view_ConsultantRow ccr = offer._ConsultantRows.First(c => c.Code == service.Article_number);

                                        price = String.Format(se, "{0:C2}", ccr.Total_price / ccr.Amount).Replace(".", " ");
                                        cost = Convert.ToInt32(ccr.Total_price / ccr.Amount);
                                    }
                                    else
                                    {
                                        price = String.Format(se, "{0:C2}", service.Price_category).Replace(".", " ");
                                        cost = (int)service.Price_category;
                                    }

                                    view_ModuleText moduleText = new view_ModuleText();
                                    moduleText.Select("Type = 'O' AND TypeId = " + offer._Offer_number.ToString() + " AND ModuleType = 'K' AND ModuleId = " + service.Article_number.ToString());


                                    <table style="width: 100%">
                                        <td style="display:inline-block; margin-top: 2vh; cursor: pointer">
                                            <span onclick="editService(this);" class="glyphicon glyphicon-pencil">

                                            </span>
                                        </td>
                                        <td style="display:inline-block; float:right; width:95%">
                                            <button style="margin-bottom:25px"
                                                    type="button"
                                                    onclick="newItem(this, @cost)"
                                                    data-code="@service.Article_number"
                                                    data-selected="false"
                                                    data-offer-id="@offer._Offer_number"
                                                    data-module-type="K"
                                                    data-multiple-select="@service.Multiple_type"
                                                    data-module-text-id="@moduleText._ID"
                                                    data-offer-description="@service.Offer_description"
                                                    data-service-code="@service.Article_number"
                                                    class="list-group-item">
                                                        <span style="font-weight:700">@service.Article_number, </span>
                                                        <span id="description-title" style="font-weight:700">@service.Module</span>
                                                        @if (!String.IsNullOrEmpty(title))
                                                        {
                                                            <span title="@title" style="padding-left:10px" class='glyphicon glyphicon-exclamation-sign'></span>
                                                        }
                                                        <span class="service-amount"></span>
                                                        <br />
                                                        <label style="font-weight:100">@price</label>
                                            </button>

                                        </td>

                                    </table>
                                }
                            </div>
                        </div>
                    </div>
                    <p> Click on a service to add it</p>
                </td>
                <td valign="top">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">Selected services to add</h3>
                        </div>
                        <div class="panel-body" style="overflow-y: scroll; height:52vh;">
                            <div id="selected-services" class="list-group">
                                @{
                                    //view_CustomerOffer offer = new view_CustomerOffer("Offer_number = " + Request["selected-offer"]);
                                    foreach (view_ConsultantRow row in offer._ConsultantRows)
                                    {
                                        view_Module service = new view_Module();
                                        service.Select("Article_number = " + row.Code);
                                        if (!String.IsNullOrEmpty(row.Alias))
                                        {
                                            service.Module = row.Alias;
                                        }

                                        String price = String.Format(se, "{0:C2}", row.Total_price / row.Amount);
                                        String title = String.IsNullOrEmpty(service.Description) ? "" : "Important info:\n" + service.Description;
                                        int cost = Convert.ToInt32(row.Total_price / row.Amount);

                                        view_ModuleText moduleText = new view_ModuleText();
                                        moduleText.Select("Type = 'O' AND TypeId = " + offer._Offer_number.ToString() + " AND ModuleType = 'K' AND ModuleId = " + service.Article_number.ToString());

                                                                <button style="margin-bottom:25px"
                                                                        type="button"
                                                                        onclick="newItem(this, @cost)"
                                                                        data-code="@service.Article_number"
                                                                        data-offer-id="@offer._Offer_number"
                                                                        data-module-type="K"
                                                                        data-multiple-select="@service.Multiple_type"
                                                                        data-module-text-id="@moduleText._ID"
                                                                        data-offer-description="@service.Offer_description"
                                                                        data-service-code="@service.Article_number"
                                                                        data-selected="true"
                                                                        class="list-group-item">
                                                                    <span style="font-weight:700">@service.Article_number, </span>
                                                                    <span id="description-title" style="font-weight:700">@service.Module</span>
                                                                    @if (!String.IsNullOrEmpty(title))
                                                                    {
                                                                        <span title="@title" style="padding-left:10px" class='glyphicon glyphicon-exclamation-sign'></span>
                                                                    }
                                                                    <span class="service-amount">@row.Amount</span>
                                                                    <br />
                                                                    <label style="font-weight:100">@price</label>
                                                                </button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <p> Click on a service to remove it</p>
                </td>
            </tr>
        </table>
        <div class="pull-right">
            <h4 style="display: inline-block;" id="total-cost-container">0</h4>
        </div>
        <div class="clearfix"></div>
    </form>



    <script>
    var services = [];
    var serverPrefix = "@Url.Content("~/")";
    var addService = function(code, cost, amount, desc)
    {
        if(typeof amount == "undefined")
            amount = 1;

        amount = parseInt(amount);

        for(var i = 0; i < services.length; i++)
        {
            if(services[i].id == code){
                services[i].amount += amount;
                services[i].total += amount*cost;
                services[i].desc = desc;
                if(services[i].amount <= 0)
                {
                    services.splice(i, 1);
                }
                break;
            }
        }

        setTotalCost(amount,cost);

    }

    var setTotalCost = function(amount, cost){
        cost = parseFloat(cost);
        $h4 = $("#total-cost-container");
        total = parseInt($h4.html().replace("kr","").replace(/\s+/g, ''));
        total += amount*cost;
        if(total < 0)
            total = 0;
        $h4.html(formatCurrency(total));
    }

    var elementExist = function($element, $list, attr)
    {
        $list = $list.find(".list-group-item");
        for(var i = 0; i < $list.length; i++)
        {
            var $item = $($list.get(i));
            if(typeof $item == "undefined")
                return false;

            if($item.attr(attr) == $element.attr(attr))
                return true;
        }
        return false;
    }

    var highlightItem = function($item, css)
    {
        $item.addClass(css)
        setTimeout(function () {
            $item.removeClass(css);
            $item.addClass("highlight-item-fade");
            setTimeout(function () {
                $item.removeClass("highlight-item-fade");
            }, 600);
        }, 600);
    }

    var editService = function(span)
    {
        $span = $(span);
        $tr = $span.parent().parent();
        $label = $tr.find("label");
        $desc = $tr.find("#description-title");
        var desc = $desc.html();
        var value = $label.html();
        value = value.replace(" kr", "");
        value = value.replace(" ", "");
        value = value.replace(",00", "");

        bootbox.dialog({
            backdrop: false,
            closebutton: false,
            className: "small-modal",
            title: "Edit service",
            message: "<form class='form-horizontal'>                                                                                                \
                    <div class='form-group'>                                                                                                    \
                        <label for='cost-text' class='col-sm-2 control-label'>Cost</label>                                                \
                        <div class='col-sm-10'>                                                                                                 \
                            <input class='form-control' id='cost-text' name='Cost' value='" + value + "'>                         \
                        </div>                                                                                                                  \
                    </div>                                                                                                                  \
                    <div class='form-group'>                                                                                                    \
                        <label for='alias-text' class='col-sm-2 control-label'>Alias</label>                                                \
                        <div class='col-sm-10'>                                                                                                 \
                            <input class='form-control' id='alias-text' name='Alias' value='" + desc + "'>                         \
                        </div>                                                                                                                  \
                    </div>   \                                                                                                                  \
                    </form>"
                ,
            buttons: {
                close: {
                    label: "Close",
                    className: "btn-close",
                    callback: function(){
                        $(".small-modal").remove();
                    }
                },
                success: {
                    label: "Save",
                    className: "btn-success",
                    callback: function () {
                        newCost = formatCurrency($("#cost-text").val());
                        newAlias = $("#alias-text").val()
                        $button = $tr.find("button");
                        var code = $button.attr("data-code");
                        $label.html(newCost);
                        $desc.html(newAlias);
                        $("#selected-services button[data-code='" + code + "'] label").html(newCost);

                        $button.attr("onclick", "newItem(this, " + $("#cost-text").val() + ");");

                        var code = $button.attr("data-code");
                        length = services.length;

                        for(var i = 0; i < length; i++)
                        {
                            var service = services[i];

                            if(service.id == code)
                            {
                                setTotalCost(service.amount * (-1), value);
                                setTotalCost(service.amount, $("#cost-text").val());

                                service.total = $("#cost-text").val() * service.amount;

                            }
                        }
                        $(".small-modal").remove();
                    },
                },
            }
        });
    }

    var newItem = function(element, price){

        $button = $(element);
        $availableServices = $("#available-services");
        $selectedServices = $("#selected-services");

        if($button.attr("data-selected") == "false"){
            if(!elementExist($button, $selectedServices, "data-code")){
                $newButton = $button.clone();
                $newButton.attr("data-selected", "true");
                $newButton.prependTo($selectedServices);

                $amountLabel = $newButton.find(".service-amount");
                $amountLabel.html("1");
                $amountLabel.parent().removeClass("highlight-item-red");
                highlightItem($amountLabel.parent(), "highlight-item-blue");

                setTotalCost(1 ,price);
                services.push({
                    id: $newButton.attr("data-code"),
                    amount: 1,
                    total: price,
                    desc: $button.find("#description-title").html(),
                    Offer_description: $newButton.attr("data-offer-description"),
                    Offer_id: $newButton.attr("data-offer-id"),
                    Module_text_id: $newButton.attr("data-module-text-id"),
                    Module_type: $newButton.attr("data-module-type"),
                    Service_code: $newButton.attr("data-service-code")
                });
            }
            else {
                if ($button.attr("data-multiple-select") == "1") {
                    $selectedButton = $selectedServices.find(".list-group-item[data-code='" + $button.attr("data-code") + "']");

                    $amountLabel = $selectedButton.find(".service-amount");
                    var amount = parseInt($amountLabel.html());
                    amount += 1;

                    $amountLabel.html(amount);
                    $amountLabel.parent().removeClass("highlight-item-red");
                    highlightItem($amountLabel.parent(), "highlight-item-blue");

                    $selectedButton.find("#description-title").html($button.find("#description-title").html());

                    addService($button.attr("data-code"), price, 1, $button.find("#description-title").html());
                }
                else {
                    alert("Multiple select is disabled for this service")
                }
            }
        }
        else{
            $amountLabel = $button.find(".service-amount");
            var amount = parseInt($amountLabel.html());
            if(amount > 1){
                amount -= 1;
                $amountLabel.html(amount);
                $amountLabel.parent().removeClass("highlight-item-blue");
                highlightItem($amountLabel.parent(), "highlight-item-red");

                addService($button.attr("data-code"), price, -1, $button.find("#description-title").html());
            }
            else{
                $button.attr("data-selected", "false");
                addService($button.attr("data-code"), price, -1, $button.find("#description-title").html());
                $button.remove();
            }
        }
    }

        $(document).ready(function () {
            $("#service-search-button").click(function () {
                fillServiceSearchList();
            });

            $('#service-search').keypress(function (e) {
                if (e.keyCode == 13) {
                    $('#service-search-button').click();
                    return false;
                }
            });

        @{
            foreach (view_ConsultantRow row in offer._ConsultantRows)
            {
                view_Module service = new view_Module();
                service.Select("Article_number = " + row.Code);

                view_ModuleText moduleText = new view_ModuleText();
                moduleText.Select("Type = 'O' AND TypeId = " + offer._Offer_number.ToString() + " AND ModuleType = 'K' AND ModuleId = " + service.Article_number.ToString());

                String price = String.Format(se, "{0:C2}", service.Price_category);
                int cost = (int)service.Price_category;

                var resultString = !string.IsNullOrEmpty(service.Offer_description) ? service.Offer_description : "";

                @Html.Raw("services.push({id:" + row.Code +
                            ", amount:" + row.Amount +
                            ", total:" + (int)row.Total_price +
                            //", Offer_description:'" + resultString + "'" + Varför behövs denna? Texten verkar komma fram ändå. Just nu orsakar denna ett fel då texten innehåller något konstigt tecken...
                            ", Offer_id:" + row.Offer_number +
                            ", Module_text_id:" + moduleText._ID +
                            ", Module_type:'K'" +
                            ", Service_code:" + service.Article_number +
                            "}); setTotalCost(" + row.Amount + ", " + (int)(row.Total_price / row.Amount) + ");");
            }
        }
        });

        //Hämtar samtliga gällande servicear och markerar de i kontraktet befintliga
        var fillServiceSearchList = function () {
            var $searchText = $("#service-search");
            console.log($searchText);

            $availableServices = $("#available-services");
            $availableServices.html("");

            $.ajax({
                "url": serverPrefix + "CustomerOffer/JsonData/",
                "type": "POST",
                "data": {
                    "requestData": "get_modules_all",
                    "customer": "@Html.Raw(ViewBag.CustomerName)",
                    "searchtext": $searchText.val(),
                    "moduletype": 2, //Services
                    "offerNo": "@Html.Raw(ViewBag.OfferNo)"
                },
                "success": function (data) {
                    if (data.length > 0) {
                        var servicesData = JSON.parse(data);
                        var length = servicesData.length;
                        for (var i = 0; i < length; i++) {
                            service = servicesData[i];
                            var title = "Important info: " + service.Description;
                            if (service.Description.length > 0) {
                                $availableServices.append("                                                                     \
                                    <table style='width:100%'>                                                                                     \
                                            <td style='display:inline-block; margin-top: 2vh; cursor:pointer'>                  \
                                                <span onclick ='editService(this);' class='glyphicon glyphicon-pencil'></span > \
                                            </td>                                                                               \
                                            <td style='display:inline-block; float:right; width:95%'>                           \
                                                <button style='margin-bottom:25px'                                              \
                                                        type = 'button'                                                         \
                                                        onclick = 'newItem(this, " + service.Price_category + ")'               \
                                                        data-code='" + service.Article_number + "'                              \
                                                        data-offer-description='" + service.Offer_Description + "'              \
                                                        data-offer-id='" + service.Offer_id + "'                                \
                                                        data-multiple-select='" + service.Multiple_type + "'                    \
                                                        data-module-type='" + service.Module_type + "'                          \
                                                        data-module-text-id='" + service.Module_text_id + "'                    \
                                                        data-selected='false'                                                   \
                                                        class='list-group-item'>                                                \
                                                    <span style='font-weight: 700'>" + service.Article_number + ", </span>  \
                                                    <span style='font-weight: 700' id='description-title'>" + service.Module + "</span>                  \
                                                    <span title='" + title + "' style='padding-left: 10px' class='glyphicon glyphicon-exclamation-sign'></span> \
                                                    <span class='service-amount'></span>                                        \
                                                    <br />                                                                      \
                                                    <label style='font-weight: 100'>" + formatCurrency(service.Price_category) + "</label>                 \
                                                </button >                                                                      \
                                            </td >                                                                              \
                                    </table>                                                                                    \
                                ");
                            } else {
                                $availableServices.append("                                                                     \
                                    <table style='width:100%'>                                                                                     \
                                            <td style='display:inline-block; margin-top: 2vh; cursor:pointer'>                  \
                                                <span onclick ='editService(this);' class='glyphicon glyphicon-pencil'></span > \
                                            </td>                                                                               \
                                            <td style='display:inline-block; float:right; width:95%'>                           \
                                                <button style='margin-bottom:25px'                                              \
                                                        type = 'button'                                                         \
                                                        onclick = 'newItem(this, " + service.Price_category + ")'               \
                                                        data-code='" + service.Article_number + "'                              \
                                                        data-selected='false'                                                   \
                                                        class='list-group-item'>                                                \
                                                    <span style='font-weight: 700'>" + service.Article_number + ", </span>  \
                                                    <span style='font-weight: 700' id='description-title'>" + service.Module + "</span>                  \
                                                    <span class='service-amount'></span>                                        \
                                                    <br />                                                                      \
                                                    <label style='font-weight: 100'>" + formatCurrency(service.Price_category) + "</label>                 \
                                                </button >                                                                      \
                                            </td >                                                                              \
                                    </table>                                                                                    \
                                ");
                            }
                        }
                    }
                }
            });
        }

        var saveFunction = function(){

            $.ajax({
                "url": serverPrefix + "CustomerOffer/JsonData/",
                "type": "POST",
                "data": {
                    "requestData": "update_view_Service",
                    "object": JSON.stringify(services),
                    "offer": "@Request["selected-offer"]"
                },
                dataType: 'text',
                // iOS 6 has a dreadful bug where POST requests are not sent to the
                // server if they are in the cache.
                headers: { 'Cache-Control': 'no-cache' }, // Apple!
                "success": function (data) {
                    if (data > 0) {
                        //Need to save standard texts to moduleinfo
                        $.ajax({
                            "url": serverPrefix + "CustomerOffer/ModuleTextData/",
                            "type": "POST",
                            "data": {
                                "object": JSON.stringify(services)
                            },
                            dataType: 'text',
                            // iOS 6 has a dreadful bug where POST requests are not sent to the
                            // server if they are in the cache.
                            headers: { 'Cache-Control': 'no-cache' }, // Apple!
                            "success": function (data) {
                                // Success to update db. Now update the preview section.
                                $.ajax({
                                    "url": serverPrefix + "CustomerOffer/ViewPdf?selected-offer=@Request["selected-offer"]&offer-section=_OfferHTML_OfferSection",
                                    "type": "GET",
                                    "success": function (data) {
                                        $(".crm-pdf-offer-section").html(data);
                                        location.reload(true);
                                    }
                                });
                            }
                        });
                    }
                }
            })
        }
    </script>
            }
            else if (Request["modal"] == "head-information")
            {

                String disabled = "";
                if (ViewBag.CustomerOffer.Offer_status != "Öppen")
                {
                    disabled = "disabled";
                }



<form id="head-information-form" class="form-horizontal">
    <div class="form-group">
        <label for="contact-person-select" class="col-sm-2 control-label">Contact Person</label>
        <div class="col-sm-10">
            <select class="form-control selectpicker" name="Contact_person" id="contact-person-select" placeholder="Contact person">
                @foreach (view_CustomerContact cc in ViewBag.ContactPersons)
                {
                    if (ViewBag.CustomerOffer.Contact_person == cc.Contact_person)
                    {
                        <option value="@cc.Contact_person" selected>@cc.Contact_person</option>
                    }
                    else
                    {
                        <option value="@cc.Contact_person">@cc.Contact_person</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label for="our-sign-select" class="col-sm-2 control-label">Our salesman</label>
        <div class="col-sm-10">
            <select class="form-control selectpicker" name="Our_sign" id="our-sign-select" placeholder="Our salesman">
                @foreach (string cc in ViewBag.Repr)
                {
                    if (ViewBag.CustomerOffer.Our_sign == cc)
                    {
                        <option value="@cc" selected>@cc</option>
                    }
                    else
                    {
                        <option value="@cc">@cc</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label for="buyer" class="col-sm-2 control-label">Buyer</label>
        <div class="col-sm-10">
            <input class="form-control" id="buyer" name="Buyer" value="@ViewBag.CustomerOffer.Buyer" />
        </div>
    </div>
    <div class="form-group">
        <label for="administration" class="col-sm-2 control-label">Administration</label>
        <div class="col-sm-10">
            <input class="form-control" id="administration" name="Administration" value="@ViewBag.CustomerOffer.Administration" />
        </div>
    </div>
    <div class="form-group">
        <label for="offer-valid-date" class="col-sm-2 control-label">Offer valid</label>
        <div class="col-sm-10">
            <input type="date"
                   class="form-control"
                   name="Offer_valid"
                   id="offer-valid-date"
                   value="@ViewBag.CustomerOffer.Offer_valid.ToString().Replace(@" 00:00:00", "")"
                   placeholder="Offer valid"
                   @Html.Raw(disabled)>
        </div>
    </div>
    <div class="form-group">
        <label for="status-select" class="col-sm-2 control-label">Status</label>
        <div class="col-sm-10">
            <select class="form-control selectpicker" name="Offer_status" id="status-select" placeholder="Status">
                @foreach (String status in ViewBag.Statuses)
                {
                    if (ViewBag.CustomerOffer.Offer_status == status)
                    {
                        <option value="@status" selected>@status</option>
                    }
                    else
                    {
                        <option value="@status">@status</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label for="title-text" class="col-sm-2 control-label">Title</label>
        <div class="col-sm-10">
            <input id="title-text" name="Title" type="text" class="form-control" value="@ViewBag.CustomerOffer.Title">
        </div>
    </div>
    <div class="form-group">
        <label for="area-text" class="col-sm-2 control-label">Area</label>
        <div class="col-sm-10">
            <input id="area-text" name="Area" type="text" class="form-control" value="@ViewBag.CustomerOffer.Area" disabled>
        </div>
    </div>
    <div class="form-group">
        <label for="tags-text" class="col-sm-2 control-label">Tags</label>
        <div class="col-sm-10">
            <input id="tags-text" name="Hashtags" type="text" class="form-control" value="@ViewBag.CustomerOffer.HashtagsAsString()">
        </div>
    </div>
    <div class="form-group">
        <label for="OrgInfoId" class="col-sm-2 control-label">Organisation</label>
        <div class="col-sm-3">
            <select class="form-control selectpicker" name="OrgInfoId" id="OrgInfoId" placeholder="Organisation">
                @foreach (view_OrganisationInformation org in ViewBag.Organisations)
                {
                    if (org._ID == @ViewBag.CustomerOffer.OrgInfoId)
                    {
                        if (org.IsDefaultValue)
                        {
                            <option value="@org._ID" selected>@org.CompanyName - @org.OrgNo (Default)</option>
                        }
                        else
                        {
                            <option value="@org._ID" selected>@org.CompanyName - @org.OrgNo</option>
                        }
                    }
                    else
                    {
                        if (org.IsDefaultValue)
                        {
                            <option value="@org._ID">@org.CompanyName - @org.OrgNo (Default)</option>
                        }
                        else
                        {
                            <option value="@org._ID">@org.CompanyName - @org.OrgNo</option>
                        }
                        
                    }
                }
            </select>
        </div>
        <div class="col-sm-5 checkbox">
            <label style="text-align:left" class="col-sm-12">
                <input checked id="defaultOrg" data-id="defaultOrg" name="DefaultOrg" type="checkbox"/>
                Default Organisation
            </label>
        </div>
    </div>
    <div class="form-group">
        <label for="summera" class="col-sm-2 control-label">Summera</label>
        <div class="col-sm-10">
            <div class="checkbox">
                @if (ViewBag.CustomerOffer.Summera == 1)
                {
                    <input id="summera" data-id="summera" name="Summera" type="checkbox" checked />
                }
                else
                {
                    <input id="summera" data-id="summera" name="Summera" type="checkbox" />
                }
            </div>
        </div>
    </div>
</form>



    <script>
        var serverPrefix = "@Url.Content("~/")";

        // Selectpicker
        $('.selectpicker').selectpicker();

        // Get current browser information
        var get_browser = function() {
            var ua = navigator.userAgent,
                tem,
                M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
            if (/trident/i.test(M[1])) {
                tem =/\brv[ :]+(\d+)/g.exec(ua) || [];
                return 'IE';
            }
            if (M[1] === 'Chrome') {
                tem = ua.match(/\bOPR\/(\d+)/)
                if (tem != null) {
                    return 'Opera'
                }
            }
            M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
            if ((tem = ua.match(/version\/(\d+)/i)) !=null) {
                M.splice(1,1,tem[1]);
            }
            return M[0];
        }

        // Check if browser is using webkit
        var webkit = get_browser() == "Chrome"  ||
            /iPad|iPhone|iPod/.test( navigator.userAgent )  ||
            get_browser() == "Opera";

        var saveFunction = function(offerNumber){
            var updateData = {};
            var $sndForm = $("#head-information-form");
            var $inputs = $sndForm.find(":input");

            $inputs.each(function () {
                var $formInput = $(this);
                var inputProp = $formInput.attr("name");
                if(inputProp != "Sign" && inputProp != "Template_number" && inputProp != "SSMA_timestamp" && typeof inputProp != 'undefined'){
                    if (inputProp == "Summera" || inputProp == "DefaultOrg") {
                        updateData[$formInput.attr("name")] = (($formInput.prop("checked")) ? true : false);
                    }
                    else {
                        updateData[$formInput.attr("name")] = $formInput.val();
                    }
                }

            });




            $.ajax({
                "url": serverPrefix + "CustomerOffer/JsonData/",
                "type": "POST",
                "data": {
                    "requestData": "update_head_information",
                    "object": JSON.stringify(updateData),
                    "offerNumber": offerNumber

                },
                dataType: 'text',
                // iOS 6 has a dreadful bug where POST requests are not sent to the
                // server if they are in the cache.
                headers: { 'Cache-Control': 'no-cache' }, // Apple!
                "success": function (data) {
                    if (data > 0) {
                        // Update current values
                        currentOfferValues = updateData;
                        // Loop through "HTML PDF" and update fields
                        $.each(updateData, function(key, val){
                            if(key == "Contact_person"){
                                $.ajax({
                                    "url": serverPrefix + "CustomerOffer/GetCustomerContact/",
                                    "type": "POST",
                                    "data": {
                                        "offerNumber": offerNumber,
                                        "customer": "@Html.Raw(ViewBag.CustomerName)"
                                    },
                                    "success": function(data){
                                        var cc = JSON.parse(data);
                                        if(Object.keys(data).length > 0){
                                            try{
                                                $("#Contact_person_name").html(cc.Contact_person);
                                                $("#Contact_person_email").attr("href", "mailto:" + cc.Email).html(cc.Email);
                                            }
                                            catch(e){
                                                console.log(e.description);
                                            }
                                            location.reload();
                                        }
                                    }
                                });
                            } else {
                                var $updateTarget = $("#" + key);
                                if($updateTarget.length > 0){
                                    $updateTarget.html(val);
                                }
                            }

                        })
                    }
                }
            })
        }

        // If browser is not using webkit use jquery datepicker
        $(document).ready(function(){
            $("#status-select").change(function(element){
                var val = $(this).val();
                var $dateInput = $("#offer-valid-date");
                if(val != "Öppen") {
                    $dateInput.prop("disabled", true);
                } else {
                    $dateInput.prop("disabled", false);
                }
            });

            $("#OrgInfoId").change(function (element) {
                var sel = document.getElementById("OrgInfoId");
                if (sel.selectedIndex > -1) {
                    var text = sel.options[sel.selectedIndex].text;

                    if (text != null && text.indexOf("Default") > -1) {
                        document.getElementById("defaultOrg").checked = true;
                    } else {
                        document.getElementById("defaultOrg").checked = false;
                    }
                }
            });

            var sel = document.getElementById("OrgInfoId");
            if (sel.selectedIndex > -1) {
                var text = sel.options[sel.selectedIndex].text;

                if (text != null && text.indexOf("Default") > -1) {
                    document.getElementById("defaultOrg").checked = true;
                } else {
                    document.getElementById("defaultOrg").checked = false;
                }
            }

            if(!webkit)
            {
                $("#offer-valid-date").datepicker({ dateFormat: 'yy-mm-dd' });
            }
        });

        
    </script>
}
else if (Request["modal"] == "module-info")
{
    <form id="module-info-form" class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-12">
                @{
                    int count = 1;
                }
                <table border="0" id="modules" class="table table-hover" style="width: 100%; border-top: solid; border-top-width: thin; border-top-color: gainsboro;">
                    @foreach (KeyValuePair<String, List<dynamic>> system in ViewBag.ArticleSystemDictionary)
                    {
                        foreach (var offerInfo in system.Value)
                        {
                            <tr style="width:80%; border-bottom: solid; border-bottom-width: thin; border-bottom-color: gainsboro;">
                                <th style="vertical-align:middle" width="10%">@offerInfo.Article_number</th>
                                <th style="vertical-align:middle">@offerInfo.System</th>
                                <th style="vertical-align:middle">@Html.Raw(offerInfo.Module)</th>
                                <th>
                                    <button id="default-text-@(count)"
                                            data-artno="@offerInfo.Article_number"
                                            data-type="@offerInfo.Classification"
                                            data-index="@(count)"
                                            onclick="getModuleInfoDefaultText(this)"
                                            type="button"
                                            class="btn btn-primary module-info-default-text-button">
                                        Get text
                                    </button>
                                    <button type="button"
                                            data-index="@(count)"
                                            onclick="removeDefaultText(this)"
                                            class="btn module-info-default-text-button-red">
                                        Clear text
                                    </button>
                                </th>
                            </tr>
                            <tr style="background-color:lightgrey">
                                <td colspan="4">
                                    <div class="row">
                                        <div class="col-sm-4" style="margin:3px; margin-bottom:5px">
                                            <label for="module-info-text@(count)" class="control-label">Module and Services info</label>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <textarea id="module-info-text@(count)" name="module-info-text@(count)" class="form-control" rows="6">@offerInfo.OfferDescription</textarea>
                                            <input type="hidden" id="typeId@(count)" name="typeId@(count)" value="@offerInfo.Offer_number">
                                            <input type="hidden" id="moduleId@(count)" name="moduleId@(count)" value="@offerInfo.Article_number">
                                            <input type="hidden" id="moduleTextId@(count)" name="moduleTextId@(count)" value="@offerInfo.ModuleTextId">
                                            <input type="hidden" id="moduleType@(count)" name="moduleType@(count)" value="@offerInfo.Classification">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            count++;
                        }
                    }
                </table>
                <input type="hidden" id="moduleCount" name="moduleCount" value="@count">
            </div>
        </div>
    </form>

    <script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        $('.bootbox').bind('hidden.bs.modal', function () {
            tinyMCE.remove();
        });
        tinymce.init({
            selector: "textarea",
            plugins: tinyDefaultPlugins,
            toolbar: tinyDefaultToolbars,
            browser_spellcheck: true,
            branding: false
        });

        $("#modules tr:even").addClass("even");
        $("#modules tr:not(.even)").hide();
        $("#modules tr:first-child").show();

        $("#modules tr.even").click(function () {
            var trToToggle = $(this).next("tr");
            $("#modules tr:not(.even)").not(trToToggle).hide();
            $(trToToggle).slideToggle("fast");
            $(this).find(".arrow").toggleClass("up");
        });

        var saveFunction = function(offerNumber){
            var updateData = {};
            var $ttForm = $("#module-info-form");
            var $inputs = $ttForm.find('input, textarea');
            console.log("Spara");
            var tinyMCEInputs = [
                "Page_head",
                "module-info-text",
                "Page_foot",
                "Document_foot",
            ];
            $inputs.each(function () {
                var $formInput = $(this);
                var inputProp = $formInput.attr("name");
                if(inputProp != "Sign" && inputProp != "Template_number" && inputProp != "SSMA_timestamp" && typeof inputProp != 'undefined'){
                    //console.log($formInput.attr("value"),$formInput.val());
                    // if input is a TinyMCE field extract the content.
                    var inputPropOrig = inputProp;
                    if (inputProp.startsWith("module-info-text")) {
                        inputProp = inputProp.substr(0, 16);
                    }
                    if($.inArray(inputProp, tinyMCEInputs) >= 0){

                        updateData[inputPropOrig] = tinymce.get($formInput.attr("id")).getContent()
                    }
                    else{
                        updateData[inputPropOrig] = $formInput.val();
                    }

                }

            });

            updateData["primaryKey"] = offerNumber;
            var updateDataArr = [];
            updateDataArr.push(updateData);


            $.ajax({
                "url": serverPrefix + "CustomerOffer/JsonData/",
                "type": "POST",
                "data": {
                    "requestData": "update_view_ModuleText",
                    "object": JSON.stringify(updateDataArr)
                },
                dataType: 'text',
                // iOS 6 has a dreadful bug where POST requests are not sent to the
                // server if they are in the cache.
                headers: { 'Cache-Control': 'no-cache' }, // Apple!
                "success": function (data) {
                    if (data > 0) {
                        $.ajax({
                        "url": serverPrefix + "CustomerOffer/ViewPdf?selected-offer=@Request["selected-offer"]&offer-section=_OfferHTML_OfferSection",
                        "type": "GET",
                        "success": function (data) {
                            $(".crm-pdf-offer-section").html(data);
                            triggerAlert("Successfully saved module texts", "success");
                        }
                    });
                        //// Update current values
                        //currentOfferValues = updateData;
                        //// Loop through "HTML PDF" and update fields
                        //$.each(updateData, function(key, val){
                        //    var $updateTarget = $("#" + key);
                        //    if($updateTarget.length > 0){
                        //        $updateTarget.html(val);
                        //    }
                        //})
                    }
                }
            })
        }
        $('.selectpicker').selectpicker();

        //$('.header').click(function(){
        //    if($(this).hasClass("collapsed")){
        //        $(this).nextUntil('tr.header')
        //        .find('td')
        //        .parent()
        //        .find('td > div')
        //        .slideDown("fast", function(){
        //            var $set = $(this);
        //            $set.replaceWith($set.contents());
        //        });
        //        $(this).removeClass("collapsed");
        //    } else {
        //        $(this).nextUntil('tr.header')
        //        .find('td')
        //        .wrapInner('<div style="display: block;" />')
        //        .parent()
        //        .find('td > div')
        //        .slideUp("fast");
        //        $(this).addClass("collapsed");
        //    }
        //});

        var getModuleInfoDefaultText = function(element){

            $button = $(element);
            var articleNumber = $button.data("artno");
            var type = $button.data("type");
            var index = $button.data("index");
            $.ajax({
                "url": serverPrefix + "CustomerOffer/GetOfferDescriptionDefaultText/",
                "type": "POST",
                "data": {
                    "id": articleNumber,
                    "type": type
                },
                dataType: 'text',
                headers: { 'Cache-Control': 'no-cache' },
                "success": function (data) {
                    if (data != "-1") {
                        //Update correct editor with returning text...
                        tinymce.get("module-info-text" + index).setContent(data);
                        if (element.style.border == "3px solid rgb(231, 76, 60)") {
                            element.style.border = "1px solid #0065a0";
                        } else {
                            element.style.border = "3px solid rgb(231, 76, 60)";
                        }
                    }
                }
            });

            event.stopPropagation();
        }

        var removeDefaultText = function (element) {
            $button = $(element);
            var index = $button.data("index");
            tinymce.get("module-info-text" + index).setContent('');

            //triggerAlert("Text removed successfully", "success");
            if (element.style.border == "3px solid rgb(0, 101, 160)") {
               element.style.border = "1px solid #e74c3c";
            } else {
                element.style.border = "3px solid rgb(0, 101, 160)";
            }

            event.stopPropagation();
        }
    </script>
}
