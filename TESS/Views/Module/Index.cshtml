@{
    String select = "<select class='form-control selectpicker' name='Price_category' id='price-category2'>";
    List<TietoCRM.Models.view_Price> prices = TietoCRM.Models.view_Price.getAllPrices();
    foreach (TietoCRM.Models.view_Price price in prices)
    {
        select += "<option value='" + (int)price.Level + "'>" + (int)price.Level + "</option>";
    }
    select += "</select>";

    String maintSelect = "<select class='form-control selectpicker' name='Maint_price_category' id='maint-price-category2'>";
    foreach (TietoCRM.Models.view_Price price in prices)
    {
        maintSelect += "<option value='" + (int)price.Level + "'>" + (int)price.Level + "</option>";
    }
    maintSelect += "</select>";

    String area = System.Web.HttpContext.Current.GetUser().Area;
}
@using TietoCRM.Models;
@using TietoCRM.Extensions;

<table draggable="true" id="@ViewBag.ControllerName-table" width="100%" class="table table-bordered table-hover" data-url="data1.json" data-height="299" data-sort-name="name" data-sort-order="desc">
    <thead>
        <tr>
            <th data-field="#" data-sortable="false">#</th>
            @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
            {
                String PropertyName = PropertyInfo.Name.Replace("_", " ");
                if (@PropertyName != "SSMA timestamp")
                {
                    if (@PropertyName == "Description")
                    {
                        <th data-field="@PropertyInfo.Name" data-sortable="true">Important Info</th>
                    }
                    else if (@PropertyName == "Module")
                    {
                        <th data-field="@PropertyInfo.Name" data-sortable="true">Module</th>
                    }
                    else
                    {
                        <th data-field="@PropertyInfo.Name" data-sortable="true">@PropertyName</th>
                    }
                }

            }
        </tr>
    </thead>
</table>


<div class="modal fade bs-example-modal-lg" id="moduleModal" data-backdrop="static" draggable="true" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="moduleModalLabel">Edit Module</h4>
            </div>
            <div id="module-modal" class="modal-body">
                <div class="row">
                    <form class="form-horizontal">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="article-number2" class="col-sm-2 control-label">Article number</label>
                                <div class="col-sm-9">
                                    <input class="form-control" name="Article_number" id="article-number2">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="module2" class="col-sm-2 control-label" id="module-label">Module</label>
                                <div class="col-sm-9">
                                    <input class="form-control" name="Module" id="module2">
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label for="price-category2" id="price-category-label" class="col-sm-2 control-label">Price category</label>
                                    <div class="col-sm-3" id="price-category-container">
                                        @Html.Raw(select)
                                    </div>
                                </div>
                                <div style="display:none" id="maint-form-group">
                                    <label for="maint-price-category2" class="col-sm-3 control-label">Maintenance Price category</label>
                                    <div class="col-sm-3" id="maint-price-category-container">
                                        @Html.Raw(maintSelect)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="area2" class="col-sm-2 control-label">Area</label>
                                <div class="col-sm-9">
                                    @if (GlobalVariables.isAuthorized(GlobalVariables.UserLevel.Salesperson))
                                    {
                                        <input type="text" name="Area" id="area2" class="form-control" value="@HttpContext.Current.GetUser().Area" disabled />
                                    }
                                    else
                                    {
                                        <select class="form-control selectpicker" name="Area" id="area2">
                                            @foreach (var SelectOption in (new SelectOptions<view_Sector>()).GetOptions("Area").Where(a => a.Value != "*").ToList())
                                            {
                                                <option value="@SelectOption.Value">@SelectOption.Text</option>
                                            }
                                        </select>
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="system2" class="col-sm-2 control-label">System</label>
                                <div class="col-sm-9">
                                    <select class="form-control selectpicker" name="System" id="system2"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="classification2" class="col-sm-2 control-label">Classification</label>
                                <div class="col-sm-9">
                                    <select class="form-control selectpicker" name="Classification" id="classification2"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-offset-2 col-sm-9">
                                    <div class="row">
                                        <div class="col-sm-4">
                                            <div class="radio">
                                                <label for="none2">
                                                    <input id="none2" data-id="none" checked name="none" type="radio" />
                                                    From price category
                                                </label>
                                            </div>
                                        </div>
                                        @if (area == "EDU")
                                        {
                                            <div class="col-sm-4">
                                                <div class="radio">
                                                    <label for="startup2">
                                                        <input id="startup2" data-id="startup2" name="Startup" type="radio" />
                                                        Startup price category
                                                    </label>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="radio">
                                        <label for="fixed-price2">
                                            <input id="fixed-price2" data-id="fixed-price2" name="Fixed_price" type="radio" />
                                            Fixed price
                                        </label>
                                    </div>
                                    <div class="radio">
                                        <label for="discount2">
                                            <input id="discount2" data-id="discount2" name="Discount" type="radio" />
                                            Discount
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label for="expired2">
                                            <input id="expired2" data-id="expired2" name="Expired" type="checkbox" />
                                            Expired
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label for="multiple2">
                                            <input id="multiple2" data-id="multiple2" name="Multiple_type" type="checkbox" />
                                            Multiple select
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label for="read-name-from-module2">
                                            <input id="read-name-from-module2" data-id="read-name-from-module2" name="Read_name_from_module" type="checkbox" />
                                            Always get name from Module register
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="discount-type2" class="col-sm-2 control-label">Discount type</label>
                                <div class="col-sm-9">
                                    <select class="form-control selectpicker" disabled name="Discount_type" id="discount-type2">
                                        @{
                                            TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module> selectOptions = new TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>();
                                            foreach (TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>.SelectOption so in selectOptions.GetOptions("Discount_type"))
                                            {
                                                <option value="@so.Value">@so.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="description2" class="col-sm-2 control-label">Important Info</label>
                                <div class="col-sm-9">
                                    <textarea class="form-control" name="Description" id="description2" rows="2"></textarea>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="notes2" class="col-sm-2 control-label">Comment</label>
                                <div class="col-sm-9">
                                    <textarea class="form-control" name="Comment" id="notes2" rows="2"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div>
                                    <label for="module_type" class="col-sm-2 control-label">Module Type</label>
                                    <div class="col-sm-3" id="price-category-container">
                                        <select class='form-control selectpicker' name='Module_type' id='module_type'>
                                            <option value='Article'>Article</option>
                                            <option value='Service'>Service</option>
                                        </select>
                                    </div>
                                    <label for="sort_order" class="col-sm-2 control-label">
                                    Sort order
                                    </label>
                                    <div class="col-sm-2">
                                        <input class="form-control" onkeypress="return onlyNumberKey(event)" name="Sort_order" id="sort_order"/>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="module-status2" class="col-sm-2 control-label">Module Status</label>
                                <div class="col-sm-9">
                                    <select class="form-control selectpicker" name="Module_status" id="module-status2">
                                        @{
                                            TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module> selectOptionsM = new TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>();
                                            foreach (TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>.SelectOption so in selectOptionsM.GetOptions("Module_status"))
                                            {
                                                <option value="@so.Value">@so.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="offer_description2" class="col-sm-2 control-label">Offer Description</label>
                                <div class="col-sm-9">
                                    <textarea class="form-control" name="Offer_description" id="offer_description2" rows="10"></textarea>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="contract_description2" class="col-sm-2 control-label">Contract Description</label>
                                <div class="col-sm-9">
                                    <textarea class="form-control" name="Contract_description" id="contract_description2" rows="10"></textarea>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="save-module-changes" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<!-- #region Main scripts -->
<script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
@*<script type="text/javascript" src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>*@
<script>
    var selectedId = null;

    $(document).on('show.bs.modal', '#moduleModal', function () {
        tinymce.init({
            selector: "#offer_description2",
            browser_spellcheck: true,
            branding: false
            //plugins: tinyDefaultPlugins,
            //toolbar: tinyDefaultToolbars,
            ////encoding: 'xml',
            //height : 250
        });

        tinymce.init({
            selector: "#contract_description2",
            browser_spellcheck: true,
            branding: false
            //plugins: tinyDefaultPlugins,
            //toolbar: tinyDefaultToolbars,
            ////encoding: 'xml',
            //height : 250
        });

        try {
            tinyMCE.execCommand('mceAddControl', false, 'offer_description2');
        } catch (e) {
        }

        try {
            tinyMCE.execCommand('mceAddControl', false, 'contract_description2');
        } catch (e) {
        }

        $('.selectpicker').selectpicker('refresh');

    })

    function onlyNumberKey(evt) {

        // Only ASCII charactar in that range allowed 
        var ASCIICode = (evt.which) ? evt.which : evt.keyCode
        if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))
            return false;
        return true;
    }

    $('#moduleModal').bind('hidden.bs.modal', function () {
        console.log("close");
        tinyMCE.remove();
    });

    var selectRow = function (element) {

        var $td = $(element);
        var $row = $(element).parent();
        var $table = $("#module-table");

        console.log($td, $row);


        selectedId = $td.find("input").val();
        area = $row.find('td[data-property="Area"]').html();
        console.log(area);


        StateCookie.updateSite(null, selectedId, area);

        $table.find("tr.selected").removeClass("selected");

        $row.addClass("selected");
        $td.find("input").prop("checked", "true");

    }

    var handleStates = function(){
        var stateSearch = StateCookie.getCurrentSite().search;
        var $searchBox = $("#module-table_filter").find(":input");

        if(stateSearch !== undefined)
        {
            $searchBox.val(String(stateSearch));
            $searchBox.trigger($.Event("keyup", { keyCode: 13} ));
        }

        $searchBox.bind('keyup', function(){
            StateCookie.updateSite($searchBox.val());
        });
    }

    var handleDiscountCheck = function(clicked){
        $container = $("#price-category-container");
        $discount = $("#discount2");
        $fixedPrice = $("#fixed-price2");
        $none = $("#none2");
        $startup = $("#startup2");
        $container.empty();

        document.getElementById("price-category-label").innerHTML = "Price category";

        if($(clicked).attr("name") == "Fixed_price"){
            $discount.prop("checked", false);
            $none.prop("checked", false);
            $startup.prop("checked", false);
            $("#maint-price-category2").val(null);
        }
        else if($(clicked).attr("name") == "Discount"){
            $fixedPrice.prop("checked", false);
            $none.prop("checked", false);
            $startup.prop("checked", false);
            $("#maint-price-category2").val(null);
        }
        else if($(clicked).attr("name") == "none"){
            $fixedPrice.prop("checked", false);
            $discount.prop("checked", false);
            $startup.prop("checked", false);
            $("#maint-price-category2").val(null);
        }
        else if ($(clicked).attr("name") == "Startup") {
            $fixedPrice.prop("checked", false);
            $none.prop("checked", false);
            $discount.prop("checked", false);
        }

        if($discount.is(":checked") || $fixedPrice.is(":checked") && !$none.is(":checked")) {
            $container.html("<span id='discount-percentage'>%</span>");
            $container.prepend("<input class='form-control' name='Price_category' id='price-category2' />");
            $p = $("#price-category2");
            $p.css("width","auto");
            $p.css("display", "inline-block");

            document.getElementById('maint-form-group').style.display = 'none';

            if($discount.is(":checked"))
                $("#discount-type2").prop('disabled', false);
            else
                $("#discount-type2").prop('disabled', true);
        }
        else if ($startup.is(":checked")) {

            document.getElementById('maint-form-group').style.display = 'block';
            document.getElementById("price-category-label").innerHTML = "Licence Price category";

            $container.prepend("@Html.Raw(select)");
            $('#price-category2').selectpicker();
            $p = $("#price-category2");
            $p.css("width","100%");
            $p.css("display","block");
            $("#discount-type2").prop('disabled', true);
        }
        else{
            $container.prepend("@Html.Raw(select)");
            $('#price-category2').selectpicker();
            $p = $("#price-category2");
            $p.css("width","100%");
            $p.css("display","block");
            $("#discount-type2").prop('disabled', true);

            document.getElementById('maint-form-group').style.display = 'none';

        }
        handleDiscountTypeCheck();
        $('.selectpicker').selectpicker('refresh');
    }

    var handleDiscountTypeCheck = function(){
        if($("#discount-type2").val() == "1" && $("#discount2").is(":checked"))
            $("#discount-percentage").html("%");
        else
            $("#discount-percentage").html("kr");
    }

    $(document).ready(function () {
        var uniqueRowNumber = 0;
        var $delBtns;
        var editModalChanged = 0;

        $( '#moduleModal').change(function() {
            editModalChanged = 1;
        });

        window.onbeforeunload = confirmExit;

        function confirmExit() {
            if (editModalChanged == 1) {
                return "Ändringar ej sparade. Vill du lämna sidan ändå?";
            }
        }

        $('#moduleModal').on('hide.bs.modal', function () {
            editModalChanged = 0;
        })

        $('#discount2').change(function() {
            handleDiscountCheck(this);
        });

        $('#fixed-price2').change(function() {
            handleDiscountCheck(this);
        });

        $('#discount-type2').change(function() {
            handleDiscountTypeCheck();
        });

        $("#none2").change(function() {
            handleDiscountCheck(this);
        });

        $("#startup2").change(function () {
            handleDiscountCheck(this);
        });

        $("#area2").change(function(){
            getAndFillSystemSelect();
        });

        $("#module_type").change(function () {
            handleModuleTypeChange();
        });

        $("#system2").change(function(){
            console.log(this.value);
            fillClassificationSelect(this.value);
        });

        @{String DataObject = "\r\n\t\t\t\t\t{ \"data\": \"" + "#" + "\"  },\r\n";}
        @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
        {
            if (PropertyInfo.Name != "SSMA_timestamp")
            {

                DataObject += "\t\t\t\t\t\t\t\t\t\t{ \"data\": \"" + @PropertyInfo.Name + "\"  },\r\n";
            }
        }
        @{DataObject = DataObject.Remove(DataObject.Length - 3);}

        updateDataTable(handleStates);

        drawButtons();

        $.bind()

        // Filter columns DISABLED for now.

        //var colvis = new $.fn.dataTable.ColVis($@{@ViewBag.ControllerName}Table);
        //var $colvisBtn = $(colvis.button());

        //$('.dataTables_filter').append($colvisBtn);
        //$.validator.addMethod("");

        $formValidation = $("#moduleModal form").validate({
            ignore: ".ignore",
            rules: {
                "Article_number": {
                    required: true,
                    digits: true,
                    remote: {
                        param: {
                            url: "@Url.Content("~/Module/ModuleDoesNotExist/")",
                        },
                        depends: function($element){
                            return typeof $("#save-module-changes").attr("data-Article-number") == "undefined";
                        }
                    }
                },
                "Module": {
                    required: true,
                    maxlength: 255
                },
                "Price_category": {
                    required: true,
                    number: true
                },
                "Area": {
                    required: true,
                    maxlength: 255
                },
                "System": {
                    required: true,

                },
                "Classification": {
                    required: true,

                },
            },
            messages:{
                "Article_number": {
                    remote: "The Article_number already exists in the database."
                }
            },
            errorElement: "span",
            wrapper: "a",  // a wrapper around the error message
            errorPlacement: handleErrorPlacement
        });
        editModalChanged = 0;
    });

    var drawButtons = function(){
        //var $selRowContainer = $("#@ViewBag.ControllerName-table_length");
        var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();

        $selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Create</button></div>");
        $selRowContainer.append("<div id='crm-edit' class='crm-table-btn'><button type='button' class='btn btn-default'>Edit</button></div>");
        $selRowContainer.append("<div id='crm-export-ical' class='crm-table-btn' \
            onclick=\"location.href=\'@Url.Action("ExportAsCsv", "Module", null, Request.Url.Scheme)\';\">\
            <button type='button' class='btn btn-default'>Export</button></div>");
        drawButtonsExtension($selRowContainer);

        $("#crm-add-row").bind("click", function(){
            $("#article-number2").prop("readonly",false);
            $("#save-module-changes").removeAttr("data-Article-number");
            @if (GlobalVariables.isAuthorized(GlobalVariables.UserLevel.Salesperson))
            {
                <text>
                    $('#area2').val("@HttpContext.Current.GetUser().Area");
                </text>
            }

            var $moduleModalLabel = $("#moduleModalLabel");
            $moduleModalLabel.text("Create Module");

            var $formInputs = $("#moduleModal form").find(":input");
            var frmInpLen = $formInputs.length;
            var ignoreTheseInputs = [
                "area2",
                "system2",
                "classification2"
            ];
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if($.inArray($currInput.attr("id"), ignoreTheseInputs) == -1){
                    if ($currInput.prop("id") == "expired2") {
                        $currInput.prop("checked",false);
                    } else if ($currInput.prop("id") == "none2") {
                        $currInput.prop("checked",true);
                    } else if ($currInput.prop("id") == "fixed-price2") {
                        $currInput.prop("checked",false);
                    } else if ($currInput.prop("id") == "discount2") {
                        $currInput.prop("checked",false);
                    } else if ($currInput.prop("id") == "multiple2") {
                        $currInput.prop("checked",false);
                    } else if ($currInput.prop("id") == "read-name-from-module2") {
                        $currInput.prop("checked",true);
                    } else if ($currInput.attr("name") == "Price_category"){
                        $currInput.val("0");
                    } else {
                        $currInput.val("");
                    }
                }
            }
            handleDiscountCheck();
            getAndFillSystemSelect(null, function(){
                $("#system2").trigger('change');
            });
            $("#moduleModal").appendTo("body").modal().draggable();
        });


        $("#crm-edit").bind("click", function(){
            if(selectedId != null){
                var $selectedTds = $("#module-table tr.selected td").not(".radios");

                var system = $("#module-table tr.selected td[data-property='System']").not(".radios").html();
                var area = $("#module-table tr.selected td[data-property='Area']").not(".radios").html();

                var $moduleModalLabel = $("#moduleModalLabel");
                $moduleModalLabel.text("Edit Module");

                $('#area2').selectpicker().val(area);
                getAndFillSystemSelect(area, function(){

                    fillClassificationSelect(system, function(){
                        $("#article-number2").prop("readonly",true);
                        var $selectedTds = $("#module-table tr.selected td").not(".radios");
                        var tdLen = $selectedTds.length;

                        var $formInputs = $("#moduleModal form").find(":input");

                        var frmInpLen = $formInputs.length;
                        var noneSelected = true;
                        for (var i = 0; i < frmInpLen; i++) {
                            var $currInput = $($formInputs[i]);
                            var name = $currInput.attr("name");
                            if (name != "Offer_description" && name != "Contract_description") {
                                for (var j = 0; j < tdLen; j++) {
                                    var $currTD = $($selectedTds[j]);
                                    var currName = $currTD.data("property");
                                    if (currName == name) {
                                        if ($currInput.attr("type") == "checkbox" || $currInput.attr("type") == "radio") {
                                            if ($currTD.text() == "true" || $currTD.text() == "1") {
                                                $currInput.prop("checked", true);
                                                if(name == "Discount" || name == "Fixed_price")
                                                    noneSelected = false;
                                            }
                                            else {
                                                $currInput.prop("checked", false);
                                            }
                                        }
                                        else {
                                            $currInput.val($currTD.text());
                                        }
                                    }

                                }
                            }
                        }

                        //Disabla radioknappar om Service. Endast Fixed price ska vara öppen och klickbar.
                        var moduleTypeSelect = document.getElementById("module_type");
                        var moduleType = moduleTypeSelect.value;
                        if (moduleType != undefined && moduleType == "Service") {
                            $("#none2").attr("disabled", true);
                            $("#startup2").attr("disabled", true);
                            //$("#sort_order").attr("disabled", true);
                        }
                        else {
                            $("#none2").attr("disabled", false);
                            $("#startup2").attr("disabled", false);
                            //$("#sort_order").attr("disabled", false);
                        }

                        //getTinyMCE();
                        if (noneSelected) {
                            if ($($selectedTds[17]).text() != "0") {
                                $("#none2").prop("checked", false);
                                $("#startup2").prop("checked", true);
                                $("#maint-price-category2").val($($selectedTds[17]).text());
                            }
                            else {
                                $("#none2").prop("checked", true);
                                $("#startup2").prop("checked", false);
                            }
                            $("#discount2").prop("checked", false);
                            $("#fixed-price2").prop("checked", false);
                            $("#fixed-price2").prop("checked", false);
                        }
                        else{
                            $("#none2").prop("checked", false);
                        }
                        handleDiscountCheck();
                        $("#price-category2").val($($selectedTds[3]).text());

                        $("#save-module-changes").attr("data-Article-number",selectedId);

                        $("#moduleModal").appendTo("body").modal().draggable();
                        $('.selectpicker').selectpicker('refresh');
                        getTinyMCE();
                    });
                })
            }
            else
                triggerAlert("You have to select a row to edit first.", "info");

        })
    }

    var getTinyMCE = function () {
        var $row = $(".selected");
        var pk_id = selectedId;
        $.ajax({
            "url": serverPrefix + "Module/GetTinyMCEData/",
            "type": "POST",
            "data": {
                "artnr": pk_id,
            },
            "success": function (data) {
                if (data.length > 0) {
                    var textModule = JSON.parse(data);
                    $("#offer_description2").val(textModule.Offer_description);
                    $("#contract_description2").val(textModule.Contract_description);

                    for(var i = 0; i < tinyMCE.editors.length; i++)
                    {
                        var currentED = tinyMCE.editors[i];
                        currentED.setContent($('#' + currentED.id).val());
                    }

                }
            }
        });
    }
    //End getTinyMCE function

    var triggerAlert = function(msg, priorty)
    {
        $(document).trigger("clear-alerts");
        $(document).trigger("add-alerts", [
          {
              'message': msg,
              'priority': priorty
          }
        ]);
    }

    var updateDataTable = function(onSuccess)
    {


        var dt = $@{@ViewBag.ControllerName}Table = $('#@ViewBag.ControllerName-table').DataTable({
            "destroy": true,
            "processing": true,
            "ajax":"@Url.Content("~/Module/ModuleData/")",
            "defaultContent": "",

            "order": [[ 1, "asc" ]],
            //"iDisplayLength": Math.ceil(($("#page-content-wrapper").height() / 60)),
            "columns": [@Html.Raw(DataObject)
            ],
            "initComplete": function(settings, json) {
                if(typeof onSuccess != "undefined")
                    onSuccess();
            },
            "aoColumnDefs": [
                {
                    "data": null,
                    "defaultContent": "",
                    "targets": 0
                }
            ],
            "lengthMenu": [[100, 500, 1000, -1], [100, 500, 1000, "All"]],

            "bAutoWidth": false,
            //"scrollY": ($("#page-content-wrapper").height() - 90),
            "scrollX": true,
            "fnRowCallback": drawCallBack
        });
        dt.columns.adjust().draw();
        //var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();
    //$selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Add row</button></div>");
    //$selRowContainer.append("<div id='crm-save-updates' class='crm-table-btn'><button type='button' id='crm-save-btn' class='btn btn-success' autocomplete='off'>Save</button></div>");
    //$('#crm-save-btn').on('click', save);

    }

    //Kommer hit för varje post som ska skrivas ut i tabellen
    var drawCallBack = function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

        var i = 0;

        var StateSelid = StateCookie.getCurrentSite().selectedId;
        var StateArea = StateCookie.getCurrentSite().area;
        var rowArea = aData["Area"];

        //Skriver ut radiobutten för val av rad.
        for (var name in aData) {
            var $td;
            if (i == 0) {

                $td = $('td:eq(' + i + ')', nRow);

                $td.parent().click(function () {
                    selectRow(this.firstChild);
                });

                $td.addClass("radios");
                $td.html("<input type='radio' value='" + aData["Article_number"] + "' name='selected-contact' onClick=''/>");

                if( $td.find("input").val() == StateSelid && rowArea == StateArea){
                    selectRow($($td));
                }
                else
                if( $td.find("input").val() != selectedId){
                    $td.parent().removeClass("selected");
                }
                i++;
            }

            if (i >= 1 && i < 21) {
                if (name != "Offer_description" && name != "Contract_description") {
                    $td = $('td:eq(' + i + ')', nRow);
                    $td.attr("data-property", name);
                    $td.html(aData[name]);
                }

                if (name == "Module_type") {
                    $td.html(aData[name] == "1" ? "Article": "Service");
                }
            }
            i++;
        }

        editModalChanged = 0;
    }

</script>
<!-- #endregion-->

<!-- #region Modal scripts -->
<script>
    $("#save-module-changes").bind("click",function(){

        if ($("#module-modal form").valid()) {
            save();
        }

    });

    var handleModuleTypeChange = function () {
        var moduleType = $('#module_type').val();
        if (moduleType == "Article") {
            //Enable radiobuttons
            $("#none2").attr("disabled", false);
            $("#startup2").attr("disabled", false);
            //$("#sort_order").attr("disabled", false);
        }
        else if (moduleType == "Service") {
            //Disable radiobuttons
            $("#none2").attr("disabled", true);
            $("#none2").prop("checked", false);
            $("#startup2").attr("disabled", true);
            $("#startup2").prop("checked", false);
            $("#fixed-price2").prop("checked", true);
            //$("#sort_order").attr("disabled", true);
            handleDiscountCheck();
        }
    }

    var getAndFillSystemSelect = function(area, onSuccess){
        var area = area || $('#area2').val();
        area = area == null ? $('#area2').val() : area;
        var $systemSelect = $("#system2");
        var $systemTD = $("#module-table tr.selected td[data-property='System']");
        $.ajax({
            url: "@Url.Content("~/Module/GetAllSystemNames")",
            type: "POST",
            data: {
                area: area
            },
            success: function(data){
                if(data.length > 0){
                    var selectOptions = JSON.parse(data);
                    if(selectOptions.length > 0){
                        $systemSelect.html("");
                        $.each(selectOptions, function(i,selectOption){
                            var $optionEL = $('<option></option>').val(selectOption.Value).html(selectOption.Text);
                            if(selectOption.Value == $systemTD.html()){
                                $optionEL.prop("selected", true);
                            }
                            $systemSelect.append($optionEL);
                        });
                    } else {
                        $systemSelect.html("");
                        $systemSelect.append($('<option></option>').val('').html('No system exists.').prop('selected', true));
                    }
                    $systemSelect.selectpicker('refresh');
                    $systemSelect.trigger('change');
                    if(typeof onSuccess !== 'undefined')
                        onSuccess();
                }
            }
        });
    }

    var fillClassificationSelect = function(system, onSuccess){
        var $classificationSelect = $("#classification2");
        var area = $("#area2").val();
        if(system != ""){
            $.ajax({
                "url": "@Url.Content("~/Module/GetAllClassificationNames/")",
                "type": "POST",
                "data": {
                    "system": system,
                    "area": area
                },
                "success": function (data) {
                    if (data.length > 0) {
                        var selectOptions = JSON.parse(data);
                        $classificationSelect.empty();
                        $.each(selectOptions, function(i, selectOption){
                            var $selectEl = $("<option></option>").attr("value", selectOption.Value).html(selectOption.Text);
                            if(selectOption.Value == "Modul" || selectOption == "Module")
                                $selectEl.prop("selected", true);
                            $classificationSelect.append($selectEl);
                        });
                        if(typeof onSuccess != "undefined")
                            onSuccess();
                        $classificationSelect.selectpicker('refresh');
                    }
                }
            });
        } else {
            $classificationSelect.empty();
            $classificationSelect.append($('<option value="">No Classification exists.</option>').prop('selected', true));
        }

        $classificationSelect.selectpicker('refresh');
    }

    var save = function(){
        tinymce.triggerSave();
        if(typeof $("#save-module-changes").attr("data-Article-number") != "undefined"){
            //Update
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if($currInput.attr("id") != "none2" && !$currInput.is("button"))
                {
                    if ($currInput.prop("type") == "checkbox" || $currInput.prop("type") == "radio") {
                        module[$currInput.attr("name")] = (($currInput.prop("checked")) ? "1" : "0");    
                    }
                    else if($currInput.prop("id") == "offer_description2" || $currInput.prop("id") == "contract_description2"){
                        module[$currInput.prop("name")] = tinyMCE.get($currInput.prop("id")).getContent()
                    }
                    else {
                        module[$currInput.attr("name")] = $currInput.val();
                    }
                }
            }

            $.ajax({
                "url": "@Url.Content("~/Module/SaveModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module),
                    "oldArtNr": selectedId

                },
                "success": function (data) {
                    if (data == "1") {
                        StateCookie.updateSite(null, module.Article_number, module.Area);
                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully updated", "success");
                        $("#save-module-changes").removeAttr("data-Article-number");
                        $("#moduleModal").modal("toggle");
                    } else if(data == "2") {
                        triggerAlert("Failed to save changes into database. Does not exist, cannot update.", "info");
                    } else if(data == "-2") {
                        triggerAlert("Failed to save changes into database. Wrong format provided.", "info");
                    } else {
                        triggerAlert("Failed to save changes into database.", "info");
                    }

                }

            });
        }
        else {
            //new
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if($currInput.attr("id") != "none2")
                {
                    if ($currInput.prop("type") == "checkbox" || $currInput.prop("type") == "radio") {
                        module[$currInput.attr("name")] = (($currInput.prop("checked")) ? "1" : "0");    
                    }
                    else if($currInput.prop("id") == "offer_description2" || $currInput.prop("id") == "contract_description2"){
                        module[$currInput.prop("name")] = tinyMCE.get($currInput.prop("id")).getContent()
                    }
                    else {
                        module[$currInput.attr("name")] = $currInput.val();
                    }
                }

            }

            $.ajax({
                "url": "@Url.Content("~/Module/InsertModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module)


                },
                "success": function (data) {
                    if (data == "1") {

                        StateCookie.updateSite(null, module.Article_number, module.Area);

                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully added", "success");
                        $("#moduleModal").modal("toggle");
                    } else if(data == "2") {
                        triggerAlert("Failed to insert into database. Article_id already exists.", "info");
                    } else if(data == "-2") {
                        triggerAlert("Failed to insert into database. Wrong format provided.", "info");
                    } else {
                        triggerAlert("Failed to insert into database.", "info");
                    }
                }
            });
        }

    }
</script>


<!-- #endregion -->