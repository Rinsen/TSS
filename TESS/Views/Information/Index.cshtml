@using TietoCRM.Extensions;
@using TietoCRM.Models;

<table draggable="true" id="information-table" class="table table-bordered table-hover" data-url="data1.json" data-height="299" data-sort-name="name" data-sort-order="desc">
    <thead>
        <tr>
            <th data-field="#" data-sortable="false">#</th>
            @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
            {
                String PropertyName = PropertyInfo.Name.Replace("_", " ");
                if (!ViewBag.SkipProp.Contains(PropertyInfo.Name))
                {
                    <th data-field="@PropertyInfo.Name" data-sortable="true">@PropertyName</th>
                }
            }
        </tr>
    </thead>
</table>

@* Denna del beskriver editeringsformuläret som dyker upp när man trycker på Edit eller Create. Namn=Modal*@
<div class="modal fade bs-example-modal-lg" data-backdrop="static" id="informationModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="informationModalLabel">Edit Information</h4>
            </div>
            <div id="user-modal" class="modal-body">
                <form class="form-horizontal">
                    @{
                        foreach (System.Reflection.PropertyInfo pi in ViewBag.Properties)
                        {

                            String pName = pi.Name.Replace("_", " ");
                            if (!ViewBag.SkipPropEdit.Contains(pi.Name))
                            {

                                <div class="form-group">
                                    <label for="@pi.Name.ToLower()-text" class="col-sm-2 control-label">@pName</label>
                                    <div class="col-sm-10">
                                        @if (pi.Name == "Expires")
                                        {
                                            <input class="form-control" type="date" id="@pi.Name.ToLower()" name="@pi.Name" placeholder="@pName" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                        }
                                        else if (pi.Name == "Type")
                                        {
                                            <select class="form-control" type="text" id="@pi.Name.ToLower()" name="@pi.Name">
                                                @foreach (var SelectOption in (new SelectOptions<view_Information>()).GetOptions("Type"))
                                                {
                                                    <option value="@SelectOption.Value">@SelectOption.Text</option>
                                                }
                                                @*<option>Info</option>
                                        <option>Warning</option>*@
                                            </select>
                                        }
                                        else if (pi.Name == "Message")
                                        {
                                            <textarea class="form-control" id="@pi.Name.ToLower()" name="@pi.Name"></textarea>
                                        }
                                        else if (pi.Name == "Author")
                                        {
                                            <select data-live-serach="true" class="form-control" type="text" id="@pi.Name.ToLower()" name="@pi.Name">
                                                @if(GlobalVariables.isAuthorized(GlobalVariables.UserLevel.Supervisor))
                                                {
                                                    foreach (view_User rep in ViewBag.Representatives)
                                                    {
                                                        if (rep.Sign == System.Web.HttpContext.Current.GetUser().Sign)
                                                        {
                                                            <option value="@rep.Sign" selected>@rep.Sign - @rep.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@rep.Sign">@rep.Sign - @rep.Name</option>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    view_User user = System.Web.HttpContext.Current.GetUser();
                                                    <option value="@user.Sign">@user.Sign - @user.Name</option>
                                                }
                                            </select>
                                        }
                                        else
                                        {
                                            <input class="form-control" type="text" id="@pi.Name.ToLower()" name="@pi.Name" placeholder="@pName" />
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                    @*<div class="form-group" id="hide-select-mail">
                        <label for="send-mail-to-select" class="col-sm-2 control-label">Send mail to</label>
                        <div class="col-sm-10">
                            <select class="form-control selectpicker" name="Send_mail_to" id="send-mail-to-select" multiple data-live-search="true">
                                @{ SelectOptions<view_User> selectOptions = new SelectOptions<view_User>();}
                                @foreach (view_User User in ViewBag.Representatives)
                                {
                                    <option value="@User.Sign">@selectOptions.GetValue("Area", User.Area) - @User.Name</option>
                                }
                            </select>
                        </div>
                    </div>*@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="save-information-changes" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
@*Slut på Modal*@

<script>
    var serverPrefix = "@Url.Content("~/")";
    var uploadToServer = function () {
        if (typeof $("#save-information-changes").attr("data-information") != "undefined") {

            var ID = $("#save-information-changes").attr("data-information");

            var info = {
                "_ID": ID
            }

            var $formInputs = $("#informationModal form").find(":input");

            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                info[$currInput.attr("name")] = $currInput.val();
            }
            $.ajax({
                "url": serverPrefix + "Information/SaveInformation/",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(info),
                },
                "success": function (data) {
                    if (data > 0) {
                        updateDataTable();
                        console.log("success");
                        $("#informationModal").modal("hide");
                        triggerAlert("Successfully updated this information", "success");
                    }
                    else {
                        console.log("failure");
                        triggerAlert("Something went wrong when trying to update the information to the server", "warning");
                    }
                }
            });
        }
        else {

            var info = {}

            var $formInputs = $("#informationModal form").find(":input");
            $('#author').selectpicker('refresh');
            $('#type').selectpicker('refresh');

            var frmInpLen = $formInputs.length;

            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if (!$currInput.is("button"))
                {
                    info[$currInput.attr("name")] = $currInput.val();
                }

            }
            $.ajax({
                "url": serverPrefix + "Information/InsertInformation/",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(info),
                },
                "success": function (data) {
                    if (data > 0) {
                        updateDataTable();
                        console.log("success");
                        $("#informationModal").modal("hide");
                        triggerAlert("Successfully inserted the new information", "success");
                    }
                    else {
                        console.log("failure");
                        triggerAlert("Something went wrong when trying to insert the information to the server", "warning");
                    }
                }
            });
        }
    }

    $(document).ready(function () {
        $("#save-information-changes").click(function () {
            if ($("#informationModal form").valid()) {
                uploadToServer();
            }
        });

        $formValidation = $("#informationModal form").validate({
            ignore: ".ignore",
            rules: {

                "Title": {
                    required: true,

                },
                "Message": {
                    required: true,

                },
                "Type": {
                    required: true,
                    maxlength: 50,
                },
                "Expires": {
                    required: true,
                    maxlength: 100,
                    date: true
                }
            },
            errorElement: "span",
            wrapper: "a",  // a wrapper around the error message
            errorPlacement: function (error, element) {
                error.next().addClass("tooltips");
                error.addClass("tooltips");
                error.insertAfter(element);
            }
        });
    });
</script>



<script>
    var selectedId = null;

    var selectRow = function (element) {
        var $td = $(element);
        var $row = $(element).parent();
        var $table = $("#information-table");

        $td.find("input").prop("checked", true);

        selectedId = $td.find("input").val();

        $table.find("tr.selected").removeClass("selected");

        $row.addClass("selected");
    }

    @{String DataObject = "\r\n\t\t\t\t\t{ \"data\": \"" + "#" + "\"  },\r\n";}
    @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
    {
        String PropertyName = PropertyInfo.Name.Replace("_", " ");
        if (!ViewBag.SkipProp.Contains(PropertyInfo.Name))
        {
            DataObject += "\t\t\t\t\t{ \"data\": \"" + @PropertyInfo.Name + "\"  },\r\n";
        }
    }
    @{DataObject = DataObject.Remove(DataObject.Length - 3);}
    var updateDataTable = function (onSuccess) {
        $('#information-table').DataTable({
            "destroy": true,
            "processing": true,
            "ajax": {
                "url": serverPrefix + "Information/InformationJsonData/",
            },
            "initComplete": function (settings, json) {
                if (typeof onSuccess != "undefined")
                    onSuccess();
                drawButtons();
            },
            "lengthMenu": [[100, 500, 1000, -1], [100, 500, 1000, "All"]],
           
            "defaultContent": "",
            //"iDisplayLength": Math.ceil(($("#page-content-wrapper").height() / 60)),
            "order": [[1, "asc"]],
            "columns": [@Html.Raw(DataObject)
            ],
            "columnDefs": [
                {
                    "data": null,
                    "defaultContent": "",
                    "targets": 0
                }
            ],
            //"scrollY": ($("#page-content-wrapper").height() - 170),
            //"scrollY": "600px",

            "scrollX": "1200px",
            "fnRowCallback": drawCallBack
        });
        var $selRowContainer = $("#user-table_length");
        //$selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Add row</button></div>");
        //$selRowContainer.append("<div id='crm-save-updates' class='crm-table-btn'><button type='button' id='crm-save-btn' class='btn btn-success' autocomplete='off'>Save</button></div>");
        //$('#crm-save-btn').on('click', save);
    }

    function drawButtons() {
        var $selRowContainer = $("#information-table_wrapper").find(".row").first().find(".col-sm-6").first();

        $selRowContainer.append("<div id='create-information-button' class='crm-table-btn'><button type='button' class='btn btn-default'>Create</button></div>");
        $("#create-information-button").bind("click", function () {
            $("#sign-text").removeAttr("readonly");
            $("#informationModalLabel").text("Create Information");
            $("#informationModal").appendTo("body").modal("show").draggable();
            $("#save-information-changes").removeAttr("data-information");
            var $selectedTds = $("#information-table tr.selected td").not(".radios");
            var tdLen = $selectedTds.length;

            var $formInputs = $("#informationModal form").find(":input");

            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if (!$currInput.is('button') || !$currInput.is('input.date'))
                    $currInput.val("");

            }
            $('.selectpicker').selectpicker('refresh');
            $("#hide-select-mail").show();
        });

        $selRowContainer.append("<div id='crm-edit-information' class='crm-table-btn'><button type='button' class='btn btn-default'>Edit</button></div>");
        $("#crm-edit-information").bind("click", function () {
            if (selectedId != null) {
                $("#informationModalLabel").text("Edit Information");
                $("#sign-text").prop("readonly", true);
                $("#save-information-changes").attr("data-information", selectedId);
                var $selectedTds = $("#information-table tr.selected td").not(".radios");
                var tdLen = $selectedTds.length;

                var $formInputs = $("#informationModal form").find(":input");
               

                var frmInpLen = $formInputs.length;
                for (var i = 0; i < frmInpLen; i++) {
                    var $currInput = $($formInputs[i]);
                    for (var j = 0; j < tdLen; j++) {
                        var $currTD = $($selectedTds[j]);
                        if ($currTD.data("property") == $currInput.attr("name")) {
                            $currInput.val($currTD.html());
                        }
                    }
                }
                $('#author').selectpicker('refresh');
                $('#type').selectpicker('refresh');
                $("#save-information-changes").attr("data-information", selectedId);
                $("#informationModal").appendTo("body").modal("show").draggable();
            }
            else
                triggerAlert("You have to select a row to edit first.", "info");
            $("#hide-select-mail").hide();
        });

        

        $selRowContainer.append("<div id='delete-user-button' class='crm-table-btn'><button type='button' class='btn btn-danger'>Delete</button></div>");
        $("#delete-user-button").bind("click", function () {
            bootbox.dialog({
                title: 'Do you want to delete?',
                className: "crm-delete-confirm",
                message: "You are about to delete the selected user, are you sure you want to delete it?",
                buttons: {
                    'cancel': {
                        label: 'Cancel',
                        className: 'btn-default'
                    },
                    'yes': {
                        label: 'Yes',
                        className: 'btn-danger pull-right',
                        callback: function () {
                            $.ajax({
                                "url": serverPrefix + "Information/DeleteInformation/",
                                "type": "POST",
                                "data": {
                                    "_ID": selectedId,
                                },
                                "success": function (data) {
                                    if (data > 0) {
                                        updateDataTable();
                                        console.log("success");
                                        triggerAlert("Successfully deleted row", "success");
                                        selectedId = null;
                                    }
                                    else {
                                        console.log("failure");
                                        triggerAlert("Something went wrong when trying to delete this row", "warning");
                                    }
                                }
                            });
                        }
                    },
                    'no': {
                        label: 'No',
                        className: 'pull-right',
                    }
                },
            });
        });
        drawButtonsExtension($selRowContainer);
    }

    var triggerAlert = function (msg, priorty) {
        $(document).trigger("clear-alerts");
        $(document).trigger("add-alerts", [
          {
              'message': msg,
              'priority': priorty
          }
        ]);
    }

    var drawCallBack = function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
        var i = 0, j = 0;
        var insertValue;
        for (var name in aData) {
            var $td;
            if (i == 0) {
                $td = $('td:eq(' + i + ')', nRow);

                $td.parent().click(function () {

                    selectRow(this.firstChild);
                    
                });

                $td.html("<input type='radio' value=" + aData["_ID"] + " name='selected-contact' onClick=''/>");
                $td.addClass("radios");
                if ($td.find("input").val() == selectedId) {
                    selectRow($td);
                }
                else if ($td.find("input").val() != selectedId) {
                    $td.parent().removeClass("selected");
                }
                i++;
            }

            if (name != "_ID") {
                
                if (i < 7) {
                    
                    $td = $('td:eq(' + i + ')', nRow);
                    $td.attr("data-property", name);
                    $td.html(aData[name]);
                }
                else if (name == "Expires") {
                    $td = $('td:eq(' + i + ')', nRow);
                    $td.attr("data-property", name);
                    var dateWithoutTime = (aData[name].split(" "))[0];
                    $td.html(dateWithoutTime);
                }
                i++;
            }
            
        }
    }
    

    $('document').ready(function () {


        $('[data-toggle="tooltip"]').tooltip()
        $('#author').selectpicker();
        $('#type').selectpicker();
        $("#send-mail-to-select").selectpicker();


        updateDataTable(function () {
           
        });
       
    });


</script>
