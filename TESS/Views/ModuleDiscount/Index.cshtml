<table draggable="true" id="module-table" width="100%" class="table table-bordered table-hover" data-url="data1.json" data-height="299" data-sort-name="name" data-sort-order="desc">
    <thead>
        <tr>
            <th data-field="#" data-sortable="false">#</th>
            @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
            {
                String PropertyName = PropertyInfo.Name.Replace("_", " ");
                if (PropertyInfo.Name != "_ID")
                {
                    <th data-field="@PropertyInfo.Name" data-sortable="true">@PropertyName</th>
                }

            }
        </tr>
    </thead>
</table>


<div class="modal fade bs-example-modal-lg" id="moduleModal" data-backdrop="static" draggable="true" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog contact-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="discountModalLabel">Edit Module Discount</h4>
            </div>
            <div id="module-modal" class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="article-number2" class="col-sm-2 control-label">Article number</label>
                        <div class="col-sm-10">
                            <select data-live-search="true" class="form-control selectpicker" name="Article_number" id="article-number2">
                                @foreach (TietoCRM.Models.view_Module module in ViewBag.Modules)
                                {
                                    if (ViewBag.User.Area == "*")
                                    {
                                        <option value="@module.Article_number">@module.Area : @module.Article_number - @module.Module</option>
                                    }
                                    else
                                    {
                                        <option value="@module.Article_number">@module.Article_number - @module.Module</option>
                                    }

                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="area" class="col-sm-2 control-label">Area</label>
                        <div class="col-sm-10">
                            @if (ViewBag.User.Area == "*")
                            {
                                <input class="form-control" name="Area" id="area" value="@ViewBag.User.Area">
                            }
                            else
                            {
                                <input disabled class="form-control" name="Area" id="area" value="@ViewBag.User.Area">
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="start-date" class="col-sm-2 control-label style="width: 200px;">Start date</label>
                        <div class="col-sm-10">
                            <input class="form-control" type="date" name="Start_date" id="start-date">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="end-date" class="col-sm-2 control-label">End date</label>
                        <div class="col-sm-10">
                            <input class="form-control" type="date" name="End_date" id="end-date">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="maintenace-discount" class="col-sm-2 control-label">Maintenance discount</label>
                        <div class="col-sm-10">
                            <input maxlength="3" style="width:10%; display: inline-block;" class="form-control" name="Maintenance_discount" id="maintenace-discount"><h4 style="margin-left:5px; display:inline-block;"> %</h4>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="license-discount" class="col-sm-2 control-label">License discount</label>
                        <div class="col-sm-10">
                            <input maxlength="3" style="width:10%; display: inline-block;" class="form-control" name="License_discount" id="License_discount"><h4 style="margin-left:5px; display:inline-block;"> %</h4>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="alias-text" class="col-sm-2 control-label style="width: 200px;">Alias</label>
                        <div class="col-sm-10">
                            <input class="form-control" name="Alias" id="alias-text">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="save-module-changes" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<!-- #region Main scripts -->
<script>
    var selectedId = null;

    var selectRow = function (element) {

        var $td = $(element);
        var $row = $(element).parent();
        var $table = $("#module-table");



        selectedId = $td.find("input").val();


        StateCookie.updateSite(null, selectedId);

        $table.find("tr.selected").removeClass("selected");

        $row.addClass("selected");
        $td.find("input").prop("checked", "true");

    }

    var handleStates = function(){
        var stateSearch = StateCookie.getCurrentSite().search;
        console.log(stateSearch);
        var $searchBox = $("#module-table_filter").find(":input");

        if(stateSearch !== undefined)
        {
            $searchBox.val(String(stateSearch));
            $searchBox.trigger($.Event("keyup", { keyCode: 13} ));
        }

        $searchBox.bind('keyup', function(){
            StateCookie.updateSite($searchBox.val());
        });
    }

    $(document).ready(function () {
        var uniqueRowNumber = 0;
        var $delBtns;


        @{String DataObject = "\r\n\t\t\t\t\t{ \"data\": \"" + "#" + "\"  },\r\n";}
        @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
        {
            if (PropertyInfo.Name != "_ID")
            {

                DataObject += "\t\t\t\t\t\t\t\t\t\t{ \"data\": \"" + @PropertyInfo.Name + "\"  },\r\n";
            }
        }
        @{DataObject = DataObject.Remove(DataObject.Length - 3);}


        $("#article-number2").selectpicker();
        updateDataTable(handleStates);

        drawButtons();

        $.bind()

        // Filter columns DISABLED for now.

        //var colvis = new $.fn.dataTable.ColVis($@{@ViewBag.ControllerName}Table);
        //var $colvisBtn = $(colvis.button());

        //$('.dataTables_filter').append($colvisBtn);

        $formValidation = $("#moduleModal form").validate({
            ignore: ".ignore",
            rules: {
                "Article_number": {
                    required: true,
                    digits: true
                },
                "Area": {
                    required: true,
                    maxlength: 50
                },
                "Start_date": {
                    required: true,
                },
                "End_date": {
                    required: true,
                },
                "Maintenance_discount": {
                    required: true,
                    digits: true
                },
                "License_discount": {
                    required: true,
                    digits: true
                },
            },
            errorElement: "span",
            wrapper: "a",  // a wrapper around the error message
            errorPlacement: function (error, element) {
                error.next().addClass("tooltips");
                error.addClass("tooltips");
                error.insertAfter(element);
            }
        });

        //fillClassificationSelect($("#system2").val());
    });

    var drawButtons = function(){
        //var $selRowContainer = $("#@ViewBag.ControllerName-table_length");
        var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();
        console.log($selRowContainer);

        $selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Create</button></div>");
        $selRowContainer.append("<div id='crm-edit' class='crm-table-btn'><button type='button' class='btn btn-default'>Edit</button></div>");
        $selRowContainer.append("<div id='module-delete' class='crm-table-btn'><button type='button' id='module-delete-btn' class='btn btn-danger' autocomplete='off'>Delete</button></div>");




        $("#module-delete").bind("click",function(){
            if (selectedId != null) {
                bootbox.dialog({
                    title: 'Do you want to delete?',
                    className: "crm-delete-confirm",
                    message: "You are about to delete the selected Module Discount, are you sure you want to delete it?",
                    buttons: {
                        'cancel': {
                            label: 'Cancel',
                            className: 'btn-default'
                        },
                        'yes': {
                            label: 'Yes',
                            className: 'btn-danger pull-right',
                            callback: function () {
                                $.ajax({
                                    "url": "@Url.Content("~/ModuleDiscount/DeleteModule/")",
                                    "type": "POST",
                                    "data": {
                                        "id": selectedId
                                    },
                                    "success": function (data) {
                                        if (data > 0) {

                                            console.log("success");
                                            selectedId = null;
                                            updateDataTable();
                                            drawButtons();
                                            triggerAlert("Successfully deleted", "success");
                                        }
                                        else {

                                            triggerAlert("Failed to delete from database.", "info");
                                            console.log("failure");
                                        }


                                    }
                                });
                            }
                        },
                        'no': {
                            label: 'No',
                            className: 'pull-right',
                        }
                    },
                });
            }
            else
                triggerAlert("You have to select a row to delete.", "info");

        });


        $("#crm-add-row").bind("click", function(){
            $("#article-number2").prop("readonly", false);
            var $discountModalLabel = $("#discountModalLabel");
            $discountModalLabel.text("Create Module Discount");

            $("#save-module-changes").removeAttr("data-Article-number");
            var $formInputs = $("#moduleModal form").find(":input");
            console.log($formInputs);
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if ($currInput.prop("id") == "area") {
                    $currInput.val("@ViewBag.User.Area");
                }
                else if ($currInput.prop("id") == "start-date" || $currInput.prop("id") == "end-date") {
                    $currInput.val("@DateTime.Now.ToString("yyyy-MM-dd")");
                }
                else {
                    $currInput.val("");
                }
            }
            $("#moduleModal").appendTo("body").modal().draggable();
        });


        $("#crm-edit").bind("click", function(){
            if (selectedId != null) {
                $("#discountModalLabel").text("Edit Module Discount");
                var $selectedTds = $("#module-table tr.selected td").not(".radios");
                var $selectedTds = $("#module-table tr.selected td").not(".radios");
                var tdLen = $selectedTds.length;

                var $formInputs = $("#moduleModal form").find(":input");

                var frmInpLen = $formInputs.length;
                for (var i = 0; i < frmInpLen; i++) {
                    var $currInput = $($formInputs[i]);
                    for (var j = 0; j < tdLen; j++) {
                        var $currTD = $($selectedTds[j]);
                        if($currTD.data("property") == $currInput.attr("name")){
                            var name = $currInput.attr("name");
                            $currInput.val($currTD.html());
                        }
                    }
                }
                $('.selectpicker').selectpicker('refresh');
                $("#save-module-changes").attr("data-Article-number", selectedId);
                $("#moduleModal").appendTo("body").modal().draggable();
            } else
                triggerAlert("You have to select a row to edit first.", "info");

        });
        drawButtonsExtension($selRowContainer);
    }

    var triggerAlert = function(msg, priorty)
    {
        $(document).trigger("clear-alerts");
        $(document).trigger("add-alerts", [
          {
              'message': msg,
              'priority': priorty
          }
        ]);
    }

    var updateDataTable = function(onSuccess)
    {
        var dt = $moduleTable = $('#module-table').DataTable({
            "destroy": true,
            "processing": true,
            "ajax":"@Url.Content("~/ModuleDiscount/ModuleData/")",
            "defaultContent": "",

            "order": [[ 1, "asc" ]],
            //"iDisplayLength": Math.ceil(($("#page-content-wrapper").height() / 60)),
            "columns": [@Html.Raw(DataObject)],
            "initComplete": function(settings, json) {
                if(typeof onSuccess != "undefined")
                    onSuccess();
            },
            "aoColumnDefs": [
                {
                    "data": null,
                    "defaultContent": "",
                    "targets": 0
                }
            ],
            "lengthMenu": [[100, 500, 1000, -1], [100, 500, 1000, "All"]],

            "bAutoWidth": false,
            //"scrollY": ($("#page-content-wrapper").height() - 90),
            "scrollX": true,
            "fnRowCallback": drawCallBack
        });
        //var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();
    //$selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Add row</button></div>");
    //$selRowContainer.append("<div id='crm-save-updates' class='crm-table-btn'><button type='button' id='crm-save-btn' class='btn btn-success' autocomplete='off'>Save</button></div>");
    //$('#crm-save-btn').on('click', save);

    }

    var drawCallBack = function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

        var i = 0, j = 0;

        var StateSelid = StateCookie.getCurrentSite().selectedId;

        for (var name in aData) {
            var $td;


            if (i == 0) {

                $td = $('td:eq(' + i + ')', nRow);

                $td.parent().click(function () {

                    selectRow(this.firstChild);

                });
                $td.addClass("radios");
                $td.html("<input type='radio' value='" + aData["_ID"] + "' name='selected-contact' onClick=''/>");

                if( $td.find("input").val() == StateSelid){

                    selectRow($($td));

                }
                else if( $td.find("input").val() != selectedId){
                    $td.parent().removeClass("selected");
                }
                i++;
                j++;
            }

            else if (i >= 1 && j < 13) {
                $td = $('td:eq(' + j + ')', nRow);
                $td.attr("data-property", name);
                $td.html(aData[name]);
                j++;
            }

            i++;
        }


    }

</script>
<!-- #endregion-->
<!-- #region Modal scripts -->
<script>
    $("#save-module-changes").bind("click",function(){

        if ($("#module-modal form").valid()) {
            save();
        }

    });

    var save = function(){
        if(typeof $("#save-module-changes").attr("data-Article-number") != "undefined"){
            //Update
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            console.log($formInputs);
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                module[$currInput.attr("name")] = $currInput.val();
            }

            $.ajax({
                "url": "@Url.Content("~/ModuleDiscount/SaveModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module),
                    "id": selectedId

                },
                "success": function (data) {
                    if (data > 0) {
                        console.log("success");
                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully updated", "success");
                        $("#save-module-changes").removeAttr("data-Article-number");
                        $("#moduleModal").modal("toggle");
                    }
                    else {

                        triggerAlert("Failed to update database.", "info");
                        console.log("failure");
                    }
                }

            });
        }
        else {
            //new
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            console.log($formInputs);
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if ($currInput.prop("type") == "checkbox") {
                    module[$currInput.attr("name")] = (($currInput.prop("checked")) ? "1" : "0");
                }
                else {
                    module[$currInput.attr("name")] = $currInput.val();
                }

            }

            $.ajax({
                "url": "@Url.Content("~/ModuleDiscount/InsertModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module)


                },
                "success": function (data) {
                    if (data > 0) {

                        StateCookie.updateSite(null, module.Article_number);

                        console.log("success");
                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully added", "success");
                        $("#moduleModal").modal("toggle");
                    }
                    else {

                        triggerAlert("Failed to insert into database.", "info");
                        console.log("failure");
                    }
                }
            });
        }

    }
</script>


<!-- #endregion -->

